
bomb:     file format elf64-x86-64


Disassembly of section .init:

0000000000400c98 <_init>:
  400c98:	48 83 ec 08          	sub    $0x8,%rsp
  400c9c:	48 8b 05 55 43 20 00 	mov    0x204355(%rip),%rax        # 604ff8 <_DYNAMIC+0x1d0>
  400ca3:	48 85 c0             	test   %rax,%rax
  400ca6:	74 05                	je     400cad <_init+0x15>
  400ca8:	e8 53 02 00 00       	callq  400f00 <socket@plt+0x10>
  400cad:	48 83 c4 08          	add    $0x8,%rsp
  400cb1:	c3                   	retq   

Disassembly of section .plt:

0000000000400cc0 <getenv@plt-0x10>:
  400cc0:	ff 35 42 43 20 00    	pushq  0x204342(%rip)        # 605008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400cc6:	ff 25 44 43 20 00    	jmpq   *0x204344(%rip)        # 605010 <_GLOBAL_OFFSET_TABLE_+0x10>
  400ccc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400cd0 <getenv@plt>:
  400cd0:	ff 25 42 43 20 00    	jmpq   *0x204342(%rip)        # 605018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400cd6:	68 00 00 00 00       	pushq  $0x0
  400cdb:	e9 e0 ff ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400ce0 <free@plt>:
  400ce0:	ff 25 3a 43 20 00    	jmpq   *0x20433a(%rip)        # 605020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400ce6:	68 01 00 00 00       	pushq  $0x1
  400ceb:	e9 d0 ff ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400cf0 <__errno_location@plt>:
  400cf0:	ff 25 32 43 20 00    	jmpq   *0x204332(%rip)        # 605028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400cf6:	68 02 00 00 00       	pushq  $0x2
  400cfb:	e9 c0 ff ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400d00 <strcpy@plt>:
  400d00:	ff 25 2a 43 20 00    	jmpq   *0x20432a(%rip)        # 605030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400d06:	68 03 00 00 00       	pushq  $0x3
  400d0b:	e9 b0 ff ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400d10 <puts@plt>:
  400d10:	ff 25 22 43 20 00    	jmpq   *0x204322(%rip)        # 605038 <_GLOBAL_OFFSET_TABLE_+0x38>
  400d16:	68 04 00 00 00       	pushq  $0x4
  400d1b:	e9 a0 ff ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400d20 <write@plt>:
  400d20:	ff 25 1a 43 20 00    	jmpq   *0x20431a(%rip)        # 605040 <_GLOBAL_OFFSET_TABLE_+0x40>
  400d26:	68 05 00 00 00       	pushq  $0x5
  400d2b:	e9 90 ff ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400d30 <strlen@plt>:
  400d30:	ff 25 12 43 20 00    	jmpq   *0x204312(%rip)        # 605048 <_GLOBAL_OFFSET_TABLE_+0x48>
  400d36:	68 06 00 00 00       	pushq  $0x6
  400d3b:	e9 80 ff ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400d40 <__stack_chk_fail@plt>:
  400d40:	ff 25 0a 43 20 00    	jmpq   *0x20430a(%rip)        # 605050 <_GLOBAL_OFFSET_TABLE_+0x50>
  400d46:	68 07 00 00 00       	pushq  $0x7
  400d4b:	e9 70 ff ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400d50 <strchr@plt>:
  400d50:	ff 25 02 43 20 00    	jmpq   *0x204302(%rip)        # 605058 <_GLOBAL_OFFSET_TABLE_+0x58>
  400d56:	68 08 00 00 00       	pushq  $0x8
  400d5b:	e9 60 ff ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400d60 <alarm@plt>:
  400d60:	ff 25 fa 42 20 00    	jmpq   *0x2042fa(%rip)        # 605060 <_GLOBAL_OFFSET_TABLE_+0x60>
  400d66:	68 09 00 00 00       	pushq  $0x9
  400d6b:	e9 50 ff ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400d70 <close@plt>:
  400d70:	ff 25 f2 42 20 00    	jmpq   *0x2042f2(%rip)        # 605068 <_GLOBAL_OFFSET_TABLE_+0x68>
  400d76:	68 0a 00 00 00       	pushq  $0xa
  400d7b:	e9 40 ff ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400d80 <read@plt>:
  400d80:	ff 25 ea 42 20 00    	jmpq   *0x2042ea(%rip)        # 605070 <_GLOBAL_OFFSET_TABLE_+0x70>
  400d86:	68 0b 00 00 00       	pushq  $0xb
  400d8b:	e9 30 ff ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400d90 <__libc_start_main@plt>:
  400d90:	ff 25 e2 42 20 00    	jmpq   *0x2042e2(%rip)        # 605078 <_GLOBAL_OFFSET_TABLE_+0x78>
  400d96:	68 0c 00 00 00       	pushq  $0xc
  400d9b:	e9 20 ff ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400da0 <srand@plt>:
  400da0:	ff 25 da 42 20 00    	jmpq   *0x2042da(%rip)        # 605080 <_GLOBAL_OFFSET_TABLE_+0x80>
  400da6:	68 0d 00 00 00       	pushq  $0xd
  400dab:	e9 10 ff ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400db0 <memcmp@plt>:
  400db0:	ff 25 d2 42 20 00    	jmpq   *0x2042d2(%rip)        # 605088 <_GLOBAL_OFFSET_TABLE_+0x88>
  400db6:	68 0e 00 00 00       	pushq  $0xe
  400dbb:	e9 00 ff ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400dc0 <fgets@plt>:
  400dc0:	ff 25 ca 42 20 00    	jmpq   *0x2042ca(%rip)        # 605090 <_GLOBAL_OFFSET_TABLE_+0x90>
  400dc6:	68 0f 00 00 00       	pushq  $0xf
  400dcb:	e9 f0 fe ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400dd0 <signal@plt>:
  400dd0:	ff 25 c2 42 20 00    	jmpq   *0x2042c2(%rip)        # 605098 <_GLOBAL_OFFSET_TABLE_+0x98>
  400dd6:	68 10 00 00 00       	pushq  $0x10
  400ddb:	e9 e0 fe ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400de0 <gethostbyname@plt>:
  400de0:	ff 25 ba 42 20 00    	jmpq   *0x2042ba(%rip)        # 6050a0 <_GLOBAL_OFFSET_TABLE_+0xa0>
  400de6:	68 11 00 00 00       	pushq  $0x11
  400deb:	e9 d0 fe ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400df0 <__memmove_chk@plt>:
  400df0:	ff 25 b2 42 20 00    	jmpq   *0x2042b2(%rip)        # 6050a8 <_GLOBAL_OFFSET_TABLE_+0xa8>
  400df6:	68 12 00 00 00       	pushq  $0x12
  400dfb:	e9 c0 fe ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400e00 <memcpy@plt>:
  400e00:	ff 25 aa 42 20 00    	jmpq   *0x2042aa(%rip)        # 6050b0 <_GLOBAL_OFFSET_TABLE_+0xb0>
  400e06:	68 13 00 00 00       	pushq  $0x13
  400e0b:	e9 b0 fe ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400e10 <malloc@plt>:
  400e10:	ff 25 a2 42 20 00    	jmpq   *0x2042a2(%rip)        # 6050b8 <_GLOBAL_OFFSET_TABLE_+0xb8>
  400e16:	68 14 00 00 00       	pushq  $0x14
  400e1b:	e9 a0 fe ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400e20 <fflush@plt>:
  400e20:	ff 25 9a 42 20 00    	jmpq   *0x20429a(%rip)        # 6050c0 <_GLOBAL_OFFSET_TABLE_+0xc0>
  400e26:	68 15 00 00 00       	pushq  $0x15
  400e2b:	e9 90 fe ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400e30 <__isoc99_sscanf@plt>:
  400e30:	ff 25 92 42 20 00    	jmpq   *0x204292(%rip)        # 6050c8 <_GLOBAL_OFFSET_TABLE_+0xc8>
  400e36:	68 16 00 00 00       	pushq  $0x16
  400e3b:	e9 80 fe ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400e40 <__strcpy_chk@plt>:
  400e40:	ff 25 8a 42 20 00    	jmpq   *0x20428a(%rip)        # 6050d0 <_GLOBAL_OFFSET_TABLE_+0xd0>
  400e46:	68 17 00 00 00       	pushq  $0x17
  400e4b:	e9 70 fe ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400e50 <__printf_chk@plt>:
  400e50:	ff 25 82 42 20 00    	jmpq   *0x204282(%rip)        # 6050d8 <_GLOBAL_OFFSET_TABLE_+0xd8>
  400e56:	68 18 00 00 00       	pushq  $0x18
  400e5b:	e9 60 fe ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400e60 <fopen@plt>:
  400e60:	ff 25 7a 42 20 00    	jmpq   *0x20427a(%rip)        # 6050e0 <_GLOBAL_OFFSET_TABLE_+0xe0>
  400e66:	68 19 00 00 00       	pushq  $0x19
  400e6b:	e9 50 fe ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400e70 <strtoul@plt>:
  400e70:	ff 25 72 42 20 00    	jmpq   *0x204272(%rip)        # 6050e8 <_GLOBAL_OFFSET_TABLE_+0xe8>
  400e76:	68 1a 00 00 00       	pushq  $0x1a
  400e7b:	e9 40 fe ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400e80 <exit@plt>:
  400e80:	ff 25 6a 42 20 00    	jmpq   *0x20426a(%rip)        # 6050f0 <_GLOBAL_OFFSET_TABLE_+0xf0>
  400e86:	68 1b 00 00 00       	pushq  $0x1b
  400e8b:	e9 30 fe ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400e90 <connect@plt>:
  400e90:	ff 25 62 42 20 00    	jmpq   *0x204262(%rip)        # 6050f8 <_GLOBAL_OFFSET_TABLE_+0xf8>
  400e96:	68 1c 00 00 00       	pushq  $0x1c
  400e9b:	e9 20 fe ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400ea0 <__fprintf_chk@plt>:
  400ea0:	ff 25 5a 42 20 00    	jmpq   *0x20425a(%rip)        # 605100 <_GLOBAL_OFFSET_TABLE_+0x100>
  400ea6:	68 1d 00 00 00       	pushq  $0x1d
  400eab:	e9 10 fe ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400eb0 <sleep@plt>:
  400eb0:	ff 25 52 42 20 00    	jmpq   *0x204252(%rip)        # 605108 <_GLOBAL_OFFSET_TABLE_+0x108>
  400eb6:	68 1e 00 00 00       	pushq  $0x1e
  400ebb:	e9 00 fe ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400ec0 <rand@plt>:
  400ec0:	ff 25 4a 42 20 00    	jmpq   *0x20424a(%rip)        # 605110 <_GLOBAL_OFFSET_TABLE_+0x110>
  400ec6:	68 1f 00 00 00       	pushq  $0x1f
  400ecb:	e9 f0 fd ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400ed0 <__ctype_b_loc@plt>:
  400ed0:	ff 25 42 42 20 00    	jmpq   *0x204242(%rip)        # 605118 <_GLOBAL_OFFSET_TABLE_+0x118>
  400ed6:	68 20 00 00 00       	pushq  $0x20
  400edb:	e9 e0 fd ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400ee0 <__sprintf_chk@plt>:
  400ee0:	ff 25 3a 42 20 00    	jmpq   *0x20423a(%rip)        # 605120 <_GLOBAL_OFFSET_TABLE_+0x120>
  400ee6:	68 21 00 00 00       	pushq  $0x21
  400eeb:	e9 d0 fd ff ff       	jmpq   400cc0 <_init+0x28>

0000000000400ef0 <socket@plt>:
  400ef0:	ff 25 32 42 20 00    	jmpq   *0x204232(%rip)        # 605128 <_GLOBAL_OFFSET_TABLE_+0x128>
  400ef6:	68 22 00 00 00       	pushq  $0x22
  400efb:	e9 c0 fd ff ff       	jmpq   400cc0 <_init+0x28>

Disassembly of section .plt.got:

0000000000400f00 <.plt.got>:
  400f00:	ff 25 f2 40 20 00    	jmpq   *0x2040f2(%rip)        # 604ff8 <_DYNAMIC+0x1d0>
  400f06:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000400f10 <sigint_handler.part.2>:
  400f10:	50                   	push   %rax
  400f11:	bf 88 39 40 00       	mov    $0x403988,%edi
  400f16:	e8 f5 fd ff ff       	callq  400d10 <puts@plt>
  400f1b:	bf 03 00 00 00       	mov    $0x3,%edi
  400f20:	e8 8b ff ff ff       	callq  400eb0 <sleep@plt>
  400f25:	bf bf 2f 40 00       	mov    $0x402fbf,%edi
  400f2a:	e8 e1 fd ff ff       	callq  400d10 <puts@plt>
  400f2f:	bf 01 00 00 00       	mov    $0x1,%edi
  400f34:	e8 77 ff ff ff       	callq  400eb0 <sleep@plt>
  400f39:	48 8b 3d e0 43 20 00 	mov    0x2043e0(%rip),%rdi        # 605320 <stdout@@GLIBC_2.2.5>
  400f40:	e8 db fe ff ff       	callq  400e20 <fflush@plt>
  400f45:	bf bf 2f 40 00       	mov    $0x402fbf,%edi
  400f4a:	e8 c1 fd ff ff       	callq  400d10 <puts@plt>
  400f4f:	bf 01 00 00 00       	mov    $0x1,%edi
  400f54:	e8 57 ff ff ff       	callq  400eb0 <sleep@plt>
  400f59:	48 8b 3d c0 43 20 00 	mov    0x2043c0(%rip),%rdi        # 605320 <stdout@@GLIBC_2.2.5>
  400f60:	e8 bb fe ff ff       	callq  400e20 <fflush@plt>
  400f65:	bf b5 38 40 00       	mov    $0x4038b5,%edi
  400f6a:	e8 a1 fd ff ff       	callq  400d10 <puts@plt>
  400f6f:	bf 10 00 00 00       	mov    $0x10,%edi
  400f74:	e8 07 ff ff ff       	callq  400e80 <exit@plt>
  400f79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400f80 <_start>:
  400f80:	31 ed                	xor    %ebp,%ebp
  400f82:	49 89 d1             	mov    %rdx,%r9
  400f85:	5e                   	pop    %rsi
  400f86:	48 89 e2             	mov    %rsp,%rdx
  400f89:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  400f8d:	50                   	push   %rax
  400f8e:	54                   	push   %rsp
  400f8f:	49 c7 c0 00 2f 40 00 	mov    $0x402f00,%r8
  400f96:	48 c7 c1 90 2e 40 00 	mov    $0x402e90,%rcx
  400f9d:	48 c7 c7 76 10 40 00 	mov    $0x401076,%rdi
  400fa4:	e8 e7 fd ff ff       	callq  400d90 <__libc_start_main@plt>
  400fa9:	f4                   	hlt    
  400faa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400fb0 <deregister_tm_clones>:
  400fb0:	b8 0f 53 60 00       	mov    $0x60530f,%eax
  400fb5:	55                   	push   %rbp
  400fb6:	48 2d 08 53 60 00    	sub    $0x605308,%rax
  400fbc:	48 83 f8 0e          	cmp    $0xe,%rax
  400fc0:	48 89 e5             	mov    %rsp,%rbp
  400fc3:	76 1b                	jbe    400fe0 <deregister_tm_clones+0x30>
  400fc5:	b8 00 00 00 00       	mov    $0x0,%eax
  400fca:	48 85 c0             	test   %rax,%rax
  400fcd:	74 11                	je     400fe0 <deregister_tm_clones+0x30>
  400fcf:	5d                   	pop    %rbp
  400fd0:	bf 08 53 60 00       	mov    $0x605308,%edi
  400fd5:	ff e0                	jmpq   *%rax
  400fd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  400fde:	00 00 
  400fe0:	5d                   	pop    %rbp
  400fe1:	c3                   	retq   
  400fe2:	0f 1f 40 00          	nopl   0x0(%rax)
  400fe6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400fed:	00 00 00 

0000000000400ff0 <register_tm_clones>:
  400ff0:	be 08 53 60 00       	mov    $0x605308,%esi
  400ff5:	55                   	push   %rbp
  400ff6:	48 81 ee 08 53 60 00 	sub    $0x605308,%rsi
  400ffd:	48 c1 fe 03          	sar    $0x3,%rsi
  401001:	48 89 e5             	mov    %rsp,%rbp
  401004:	48 89 f0             	mov    %rsi,%rax
  401007:	48 c1 e8 3f          	shr    $0x3f,%rax
  40100b:	48 01 c6             	add    %rax,%rsi
  40100e:	48 d1 fe             	sar    %rsi
  401011:	74 15                	je     401028 <register_tm_clones+0x38>
  401013:	b8 00 00 00 00       	mov    $0x0,%eax
  401018:	48 85 c0             	test   %rax,%rax
  40101b:	74 0b                	je     401028 <register_tm_clones+0x38>
  40101d:	5d                   	pop    %rbp
  40101e:	bf 08 53 60 00       	mov    $0x605308,%edi
  401023:	ff e0                	jmpq   *%rax
  401025:	0f 1f 00             	nopl   (%rax)
  401028:	5d                   	pop    %rbp
  401029:	c3                   	retq   
  40102a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000401030 <__do_global_dtors_aux>:
  401030:	80 3d 11 43 20 00 00 	cmpb   $0x0,0x204311(%rip)        # 605348 <completed.7585>
  401037:	75 11                	jne    40104a <__do_global_dtors_aux+0x1a>
  401039:	55                   	push   %rbp
  40103a:	48 89 e5             	mov    %rsp,%rbp
  40103d:	e8 6e ff ff ff       	callq  400fb0 <deregister_tm_clones>
  401042:	5d                   	pop    %rbp
  401043:	c6 05 fe 42 20 00 01 	movb   $0x1,0x2042fe(%rip)        # 605348 <completed.7585>
  40104a:	f3 c3                	repz retq 
  40104c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401050 <frame_dummy>:
  401050:	bf 20 4e 60 00       	mov    $0x604e20,%edi
  401055:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  401059:	75 05                	jne    401060 <frame_dummy+0x10>
  40105b:	eb 93                	jmp    400ff0 <register_tm_clones>
  40105d:	0f 1f 00             	nopl   (%rax)
  401060:	b8 00 00 00 00       	mov    $0x0,%eax
  401065:	48 85 c0             	test   %rax,%rax
  401068:	74 f1                	je     40105b <frame_dummy+0xb>
  40106a:	55                   	push   %rbp
  40106b:	48 89 e5             	mov    %rsp,%rbp
  40106e:	ff d0                	callq  *%rax
  401070:	5d                   	pop    %rbp
  401071:	e9 7a ff ff ff       	jmpq   400ff0 <register_tm_clones>

0000000000401076 <main>:
  401076:	53                   	push   %rbx
  401077:	83 ff 01             	cmp    $0x1,%edi
  40107a:	75 10                	jne    40108c <main+0x16>
  40107c:	48 8b 05 ad 42 20 00 	mov    0x2042ad(%rip),%rax        # 605330 <stdin@@GLIBC_2.2.5>
  401083:	48 89 05 c6 43 20 00 	mov    %rax,0x2043c6(%rip)        # 605450 <infile>
  40108a:	eb 63                	jmp    4010ef <main+0x79>
  40108c:	48 89 f3             	mov    %rsi,%rbx
  40108f:	83 ff 02             	cmp    $0x2,%edi
  401092:	75 3a                	jne    4010ce <main+0x58>
  401094:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  401098:	be 24 2f 40 00       	mov    $0x402f24,%esi
  40109d:	e8 be fd ff ff       	callq  400e60 <fopen@plt>
  4010a2:	48 89 05 a7 43 20 00 	mov    %rax,0x2043a7(%rip)        # 605450 <infile>
  4010a9:	48 85 c0             	test   %rax,%rax
  4010ac:	75 41                	jne    4010ef <main+0x79>
  4010ae:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
  4010b2:	48 8b 13             	mov    (%rbx),%rdx
  4010b5:	be 26 2f 40 00       	mov    $0x402f26,%esi
  4010ba:	bf 01 00 00 00       	mov    $0x1,%edi
  4010bf:	e8 8c fd ff ff       	callq  400e50 <__printf_chk@plt>
  4010c4:	bf 08 00 00 00       	mov    $0x8,%edi
  4010c9:	e8 b2 fd ff ff       	callq  400e80 <exit@plt>
  4010ce:	48 8b 16             	mov    (%rsi),%rdx
  4010d1:	be 43 2f 40 00       	mov    $0x402f43,%esi
  4010d6:	bf 01 00 00 00       	mov    $0x1,%edi
  4010db:	b8 00 00 00 00       	mov    $0x0,%eax
  4010e0:	e8 6b fd ff ff       	callq  400e50 <__printf_chk@plt>
  4010e5:	bf 08 00 00 00       	mov    $0x8,%edi
  4010ea:	e8 91 fd ff ff       	callq  400e80 <exit@plt>
  4010ef:	e8 0c 09 00 00       	callq  401a00 <invalid_phase+0x30>
  4010f4:	bf c8 2f 40 00       	mov    $0x402fc8,%edi
  4010f9:	e8 12 fc ff ff       	callq  400d10 <puts@plt>
  4010fe:	bf 00 30 40 00       	mov    $0x403000,%edi
  401103:	e8 08 fc ff ff       	callq  400d10 <puts@plt>
  401108:	e8 b3 0d 00 00       	callq  401ec0 <read_line>
  40110d:	48 89 c7             	mov    %rax,%rdi
  401110:	e8 3d 01 00 00       	callq  401252 <phase1>
  401115:	e8 26 10 00 00       	callq  402140 <phase_defused>
  40111a:	bf 30 30 40 00       	mov    $0x403030,%edi
  40111f:	e8 ec fb ff ff       	callq  400d10 <puts@plt>
  401124:	e8 97 0d 00 00       	callq  401ec0 <read_line>
  401129:	48 89 c7             	mov    %rax,%rdi
  40112c:	e8 78 01 00 00       	callq  4012a9 <phase2>
  401131:	e8 0a 10 00 00       	callq  402140 <phase_defused>
  401136:	bf 5d 2f 40 00       	mov    $0x402f5d,%edi
  40113b:	e8 d0 fb ff ff       	callq  400d10 <puts@plt>
  401140:	e8 7b 0d 00 00       	callq  401ec0 <read_line>
  401145:	48 89 c7             	mov    %rax,%rdi
  401148:	e8 1f 02 00 00       	callq  40136c <phase3>
  40114d:	e8 ee 0f 00 00       	callq  402140 <phase_defused>
  401152:	bf 7b 2f 40 00       	mov    $0x402f7b,%edi
  401157:	e8 b4 fb ff ff       	callq  400d10 <puts@plt>
  40115c:	e8 5f 0d 00 00       	callq  401ec0 <read_line>
  401161:	48 89 c7             	mov    %rax,%rdi
  401164:	e8 43 03 00 00       	callq  4014ac <phase4>
  401169:	e8 d2 0f 00 00       	callq  402140 <phase_defused>
  40116e:	bf 8a 2f 40 00       	mov    $0x402f8a,%edi
  401173:	e8 98 fb ff ff       	callq  400d10 <puts@plt>
  401178:	e8 43 0d 00 00       	callq  401ec0 <read_line>
  40117d:	48 89 c7             	mov    %rax,%rdi
  401180:	e8 cc 03 00 00       	callq  401551 <phase5>
  401185:	e8 b6 0f 00 00       	callq  402140 <phase_defused>
  40118a:	bf a5 2f 40 00       	mov    $0x402fa5,%edi
  40118f:	e8 7c fb ff ff       	callq  400d10 <puts@plt>
  401194:	e8 27 0d 00 00       	callq  401ec0 <read_line>
  401199:	48 89 c7             	mov    %rax,%rdi
  40119c:	e8 a3 04 00 00       	callq  401644 <phase6>
  4011a1:	e8 9a 0f 00 00       	callq  402140 <phase_defused>
  4011a6:	b8 00 00 00 00       	mov    $0x0,%eax
  4011ab:	5b                   	pop    %rbx
  4011ac:	c3                   	retq   

00000000004011ad <string_length>:
  4011ad:	b8 00 00 00 00       	mov    $0x0,%eax
  4011b2:	eb 07                	jmp    4011bb <string_length+0xe>
  4011b4:	48 83 c7 01          	add    $0x1,%rdi
  4011b8:	83 c0 01             	add    $0x1,%eax
  4011bb:	80 3f 00             	cmpb   $0x0,(%rdi)
  4011be:	75 f4                	jne    4011b4 <string_length+0x7>
  4011c0:	f3 c3                	repz retq 

00000000004011c2 <strings_not_equal>:
  4011c2:	41 54                	push   %r12
  4011c4:	55                   	push   %rbp
  4011c5:	53                   	push   %rbx
  4011c6:	48 89 fb             	mov    %rdi,%rbx
  4011c9:	48 89 f5             	mov    %rsi,%rbp
  4011cc:	e8 dc ff ff ff       	callq  4011ad <string_length>
  4011d1:	41 89 c4             	mov    %eax,%r12d
  4011d4:	48 89 ef             	mov    %rbp,%rdi
  4011d7:	e8 d1 ff ff ff       	callq  4011ad <string_length>
  4011dc:	41 39 c4             	cmp    %eax,%r12d
  4011df:	75 1d                	jne    4011fe <strings_not_equal+0x3c>
  4011e1:	eb 0d                	jmp    4011f0 <strings_not_equal+0x2e>
  4011e3:	3a 45 00             	cmp    0x0(%rbp),%al
  4011e6:	75 1d                	jne    401205 <strings_not_equal+0x43>
  4011e8:	48 83 c3 01          	add    $0x1,%rbx
  4011ec:	48 83 c5 01          	add    $0x1,%rbp
  4011f0:	0f b6 03             	movzbl (%rbx),%eax
  4011f3:	84 c0                	test   %al,%al
  4011f5:	75 ec                	jne    4011e3 <strings_not_equal+0x21>
  4011f7:	b8 00 00 00 00       	mov    $0x0,%eax
  4011fc:	eb 0c                	jmp    40120a <strings_not_equal+0x48>
  4011fe:	b8 01 00 00 00       	mov    $0x1,%eax
  401203:	eb 05                	jmp    40120a <strings_not_equal+0x48>
  401205:	b8 01 00 00 00       	mov    $0x1,%eax
  40120a:	5b                   	pop    %rbx
  40120b:	5d                   	pop    %rbp
  40120c:	41 5c                	pop    %r12
  40120e:	c3                   	retq   
  40120f:	48 83 ec 08          	sub    $0x8,%rsp
  401213:	e8 a8 fc ff ff       	callq  400ec0 <rand@plt>
  401218:	ba e1 83 0f 3e       	mov    $0x3e0f83e1,%edx
  40121d:	89 c1                	mov    %eax,%ecx
  40121f:	bf c0 53 60 00       	mov    $0x6053c0,%edi
  401224:	f7 ea                	imul   %edx
  401226:	89 c8                	mov    %ecx,%eax
  401228:	c1 f8 1f             	sar    $0x1f,%eax
  40122b:	c1 fa 03             	sar    $0x3,%edx
  40122e:	29 c2                	sub    %eax,%edx
  401230:	89 d0                	mov    %edx,%eax
  401232:	c1 e0 05             	shl    $0x5,%eax
  401235:	01 c2                	add    %eax,%edx
  401237:	29 d1                	sub    %edx,%ecx
  401239:	ba 80 00 00 00       	mov    $0x80,%edx
  40123e:	48 63 c9             	movslq %ecx,%rcx
  401241:	48 8b 34 cd c0 51 60 	mov    0x6051c0(,%rcx,8),%rsi
  401248:	00 
  401249:	48 83 c4 08          	add    $0x8,%rsp
  40124d:	e9 ee fb ff ff       	jmpq   400e40 <__strcpy_chk@plt>

0000000000401252 <phase1>:
  401252:	48 83 ec 08          	sub    $0x8,%rsp
  401256:	be c0 53 60 00       	mov    $0x6053c0,%esi		  # Answer
  40125b:	e8 62 ff ff ff       	callq  4011c2 <strings_not_equal> 
  401260:	85 c0                	test   %eax,%eax
  401262:	74 05                	je     401269 <phase1+0x17>       # If correct jump to return
  401264:	e8 c7 0a 00 00       	callq  401d30 <explode_bomb>
  401269:	48 83 c4 08          	add    $0x8,%rsp
  40126d:	c3                   	retq   
  40126e:	48 83 ec 08          	sub    $0x8,%rsp
  401272:	e8 49 fc ff ff       	callq  400ec0 <rand@plt>
  401277:	99                   	cltd   
  401278:	c1 ea 1d             	shr    $0x1d,%edx
  40127b:	01 d0                	add    %edx,%eax
  40127d:	83 e0 07             	and    $0x7,%eax
  401280:	29 d0                	sub    %edx,%eax
  401282:	83 c0 01             	add    $0x1,%eax
  401285:	89 05 19 41 20 00    	mov    %eax,0x204119(%rip)        # 6053a4 <completed.7585+0x5c>
  40128b:	e8 30 fc ff ff       	callq  400ec0 <rand@plt>
  401290:	99                   	cltd   
  401291:	c1 ea 1d             	shr    $0x1d,%edx
  401294:	01 d0                	add    %edx,%eax
  401296:	83 e0 07             	and    $0x7,%eax
  401299:	29 d0                	sub    %edx,%eax
  40129b:	83 c0 02             	add    $0x2,%eax
  40129e:	89 05 fc 40 20 00    	mov    %eax,0x2040fc(%rip)        # 6053a0 <completed.7585+0x58>
  4012a4:	48 83 c4 08          	add    $0x8,%rsp
  4012a8:	c3                   	retq   

00000000004012a9 <phase2>:
  4012a9:	53                   	push   %rbx			# push some sort of loop instruction onto stack
  4012aa:	48 83 ec 20          	sub    $0x20,%rsp		# Changes %rsp from "mov $0xfffffffde,%eax" to "orb $0x40,(%rdi)
  4012ae:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax		# %fs is some sort of stack-smashing protection, not important
  4012b5:	00 00 
  4012b7:	48 89 44 24 18       	mov    %rax,0x18(%rsp)		# 
  4012bc:	31 c0                	xor    %eax,%eax
  4012be:	48 89 e6             	mov    %rsp,%rsi
  4012c1:	e8 aa 0a 00 00       	callq  401d70 <read_six_numbers>
  4012c6:	8b 05 d8 40 20 00    	mov    0x2040d8(%rip),%eax        # 6053a4 <completed.7585+0x5c>
  4012cc:	39 04 24             	cmp    %eax,(%rsp)
  4012cf:	75 0c                	jne    4012dd <phase2+0x34>       # explode if eax != (%rsp)
  4012d1:	8b 05 c9 40 20 00    	mov    0x2040c9(%rip),%eax        # 6053a0 <completed.7585+0x58>
  4012d7:	39 44 24 04          	cmp    %eax,0x4(%rsp)
  4012db:	74 05                	je     4012e2 <phase2+0x39>
  4012dd:	e8 4e 0a 00 00       	callq  401d30 <explode_bomb>
  4012e2:	bb 02 00 00 00       	mov    $0x2,%ebx
  4012e7:	eb 21                	jmp    40130a <phase2+0x61>
  4012e9:	48 63 d3             	movslq %ebx,%rdx
  4012ec:	8d 4b fe             	lea    -0x2(%rbx),%ecx
  4012ef:	48 63 c9             	movslq %ecx,%rcx
  4012f2:	8d 43 ff             	lea    -0x1(%rbx),%eax
  4012f5:	48 98                	cltq   
  4012f7:	8b 04 84             	mov    (%rsp,%rax,4),%eax
  4012fa:	03 04 8c             	add    (%rsp,%rcx,4),%eax
  4012fd:	39 04 94             	cmp    %eax,(%rsp,%rdx,4)
  401300:	74 05                	je     401307 <phase2+0x5e>
  401302:	e8 29 0a 00 00       	callq  401d30 <explode_bomb>
  401307:	83 c3 01             	add    $0x1,%ebx
  40130a:	83 fb 05             	cmp    $0x5,%ebx
  40130d:	7e da                	jle    4012e9 <phase2+0x40>
  40130f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  401314:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  40131b:	00 00 
  40131d:	74 05                	je     401324 <phase2+0x7b>
  40131f:	e8 1c fa ff ff       	callq  400d40 <__stack_chk_fail@plt>
  401324:	48 83 c4 20          	add    $0x20,%rsp
  401328:	5b                   	pop    %rbx
  401329:	c3                   	retq   
  40132a:	55                   	push   %rbp
  40132b:	53                   	push   %rbx
  40132c:	bd 80 53 60 00       	mov    $0x605380,%ebp
  401331:	bb d3 4d 62 10       	mov    $0x10624dd3,%ebx
  401336:	48 83 ec 08          	sub    $0x8,%rsp
  40133a:	e8 81 fb ff ff       	callq  400ec0 <rand@plt>
  40133f:	89 c1                	mov    %eax,%ecx
  401341:	48 83 c5 04          	add    $0x4,%rbp
  401345:	f7 eb                	imul   %ebx
  401347:	89 c8                	mov    %ecx,%eax
  401349:	c1 f8 1f             	sar    $0x1f,%eax
  40134c:	c1 fa 06             	sar    $0x6,%edx
  40134f:	29 c2                	sub    %eax,%edx
  401351:	69 d2 e8 03 00 00    	imul   $0x3e8,%edx,%edx
  401357:	29 d1                	sub    %edx,%ecx
  401359:	89 4d fc             	mov    %ecx,-0x4(%rbp)
  40135c:	48 81 fd a0 53 60 00 	cmp    $0x6053a0,%rbp
  401363:	75 d5                	jne    40133a <phase2+0x91>
  401365:	48 83 c4 08          	add    $0x8,%rsp
  401369:	5b                   	pop    %rbx
  40136a:	5d                   	pop    %rbp
  40136b:	c3                   	retq   

000000000040136c <phase3>:						# <phase3+a3> = explode
  40136c:	48 83 ec 18          	sub    $0x18,%rsp		
  401370:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  401377:	00 00 
  401379:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  40137e:	31 c0                	xor    %eax,%eax		# clear eax by setting to 0
  401380:	48 8d 4c 24 04       	lea    0x4(%rsp),%rcx
  401385:	48 89 e2             	mov    %rsp,%rdx
  401388:	be 3c 39 40 00       	mov    $0x40393c,%esi
  40138d:	e8 9e fa ff ff       	callq  400e30 <__isoc99_sscanf@plt> # ARGS MUST BE TWO INTS
  401392:	83 f8 01             	cmp    $0x1,%eax		
  401395:	7f 05                	jg     40139c <phase3+0x30>	# explode if less than two args
  401397:	e8 94 09 00 00       	callq  401d30 <explode_bomb>	
  40139c:	83 3c 24 07          	cmpl   $0x7,(%rsp)		# explode if abs val of first arg > 7
  4013a0:	77 6d                	ja     40140f <phase3+0xa3>
  4013a2:	8b 04 24             	mov    (%rsp),%eax		# place first arg in eax
  4013a5:	ff 24 c5 80 30 40 00 	jmpq   *0x403080(,%rax,8)	# ENTERS JUMP TABLE BASED ON 8*ARG1
  4013ac:	8b 05 da 3f 20 00    	mov    0x203fda(%rip),%eax      # 60538c <completed.7585+0x44>
  4013b2:	eb 05                	jmp    4013b9 <phase3+0x4d>
  4013b4:	b8 00 00 00 00       	mov    $0x0,%eax		# clear eax again
  4013b9:	2b 05 d9 3f 20 00    	sub    0x203fd9(%rip),%eax      # 605398 <completed.7585+0x50> (Subtract (AND of first arg with 0x2DA000) from 0)
  4013bf:	eb 05                	jmp    4013c6 <phase3+0x5a>	# goes to ...3C6
  4013c1:	b8 00 00 00 00       	mov    $0x0,%eax
  4013c6:	03 05 bc 3f 20 00    	add    0x203fbc(%rip),%eax      # 605388 <completed.7585+0x40>
  4013cc:	eb 05                	jmp    4013d3 <phase3+0x67>	# goes to ...3E0
  4013ce:	b8 00 00 00 00       	mov    $0x0,%eax
  4013d3:	2b 05 ab 3f 20 00    	sub    0x203fab(%rip),%eax      # 605384 <completed.7585+0x3c>
  4013d9:	eb 05                	jmp    4013e0 <phase3+0x74>
  4013db:	b8 00 00 00 00       	mov    $0x0,%eax
  4013e0:	03 05 b6 3f 20 00    	add    0x203fb6(%rip),%eax      # 60539c <completed.7585+0x54>
  4013e6:	eb 05                	jmp    4013ed <phase3+0x81>	# goes to ...3ED
  4013e8:	b8 00 00 00 00       	mov    $0x0,%eax
  4013ed:	2b 05 9d 3f 20 00    	sub    0x203f9d(%rip),%eax      # 605390 <completed.7585+0x48>
  4013f3:	eb 05                	jmp    4013fa <phase3+0x8e>	# goes to ...3FA
  4013f5:	b8 00 00 00 00       	mov    $0x0,%eax
  4013fa:	03 05 80 3f 20 00    	add    0x203f80(%rip),%eax      # 605380 <completed.7585+0x38> (CONVERTS WORD TO LONG)
  401400:	eb 05                	jmp    401407 <phase3+0x9b>	# goes to ...407
  401402:	b8 00 00 00 00       	mov    $0x0,%eax
  401407:	2b 05 87 3f 20 00    	sub    0x203f87(%rip),%eax      # 605394 <completed.7585+0x4c>
  40140d:	eb 0a                	jmp    401419 <phase3+0xad>	# goes to ...419
  40140f:	e8 1c 09 00 00       	callq  401d30 <explode_bomb>
  401414:	b8 00 00 00 00       	mov    $0x0,%eax
  401419:	83 3c 24 05          	cmpl   $0x5,(%rsp)	
  40141d:	7f 06                	jg     401425 <phase3+0xb9>	# goes to ...425	
  40141f:	3b 44 24 04          	cmp    0x4(%rsp),%eax		# %al must be 0
  401423:	74 05                	je     40142a <phase3+0xbe>	# goes to ...42A
  401425:	e8 06 09 00 00       	callq  401d30 <explode_bomb>
  40142a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  40142f:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  401436:	00 00 
  401438:	74 05                	je     40143f <phase3+0xd3>	# goes to retq
  40143a:	e8 01 f9 ff ff       	callq  400d40 <__stack_chk_fail@plt>
  40143f:	48 83 c4 18          	add    $0x18,%rsp
  401443:	c3                   	retq   

0000000000401444 <fun4>:
  401444:	85 ff                	test   %edi,%edi
  401446:	7e 28                	jle    401470 <fun4+0x2c>
  401448:	83 ff 01             	cmp    $0x1,%edi
  40144b:	74 29                	je     401476 <fun4+0x32>
  40144d:	41 54                	push   %r12
  40144f:	55                   	push   %rbp
  401450:	53                   	push   %rbx
  401451:	89 f3                	mov    %esi,%ebx
  401453:	89 fd                	mov    %edi,%ebi
  401455:	8d 7f ff             	lea    -0x1(%rdi),%edi		# Recurse with input - 5
  401458:	e8 e7 ff ff ff       	callq  401444 <fun4>
  40145d:	44 8d 24 03          	lea    (%rbx,%rax,1),%r12d
  401461:	8d 7d fe             	lea    -0x2(%rbp),%edi          # Recurse with input - 4
  401464:	89 de                	mov    %ebx,%esi
  401466:	e8 d9 ff ff ff       	callq  401444 <fun4>
  40146b:	44 01 e0             	add    %r12d,%eax               # Recurse with eax +
  40146e:	eb 09                	jmp    401479 <fun4+0x35>
  401470:	b8 00 00 00 00       	mov    $0x0,%eax		# Base case 0: %edi == 0, set eax to 0 
  401475:	c3                   	retq   
  401476:	89 f0                	mov    %esi,%eax		# Base case 1: %edi == 1, set eax to esi
  401478:	c3                   	retq   	
  401479:	5b                   	pop    %rbx
  40147a:	5d                   	pop    %rbp
  40147b:	41 5c                	pop    %r12
  40147d:	c3                   	retq   
  40147e:	48 83 ec 08          	sub    $0x8,%rsp
  401482:	e8 39 fa ff ff       	callq  400ec0 <rand@plt>
  401487:	ba 67 66 66 66       	mov    $0x66666667,%edx
  40148c:	89 c1                	mov    %eax,%ecx
  40148e:	f7 ea                	imul   %edx
  401490:	89 c8                	mov    %ecx,%eax
  401492:	c1 f8 1f             	sar    $0x1f,%eax
  401495:	d1 fa                	sar    %edx
  401497:	29 c2                	sub    %eax,%edx
  401499:	8d 04 92             	lea    (%rdx,%rdx,4),%eax
  40149c:	29 c1                	sub    %eax,%ecx
  40149e:	83 c1 05             	add    $0x5,%ecx
  4014a1:	89 0d c1 3e 20 00    	mov    %ecx,0x203ec1(%rip)        # 605368 <completed.7585+0x20>
  4014a7:	48 83 c4 08          	add    $0x8,%rsp
  4014ab:	c3                   	retq   

00000000004014ac <phase4>:
  4014ac:	48 83 ec 18          	sub    $0x18,%rsp
  4014b0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4014b7:	00 00 
  4014b9:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  4014be:	31 c0                	xor    %eax,%eax
  4014c0:	48 89 e1             	mov    %rsp,%rcx
  4014c3:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
  4014c8:	be 3c 39 40 00       	mov    $0x40393c,%esi
  4014cd:	e8 5e f9 ff ff       	callq  400e30 <__isoc99_sscanf@plt>
  4014d2:	83 f8 02             	cmp    $0x2,%eax
  4014d5:	75 0d                	jne    4014e4 <phase4+0x38>
  4014d7:	8b 04 24             	mov    (%rsp),%eax
  4014da:	83 f8 01             	cmp    $0x1,%eax
  4014dd:	7e 05                	jle    4014e4 <phase4+0x38>
  4014df:	83 f8 04             	cmp    $0x4,%eax
  4014e2:	7e 05                	jle    4014e9 <phase4+0x3d>
  4014e4:	e8 47 08 00 00       	callq  401d30 <explode_bomb>
  4014e9:	8b 34 24             	mov    (%rsp),%esi
  4014ec:	8b 3d 76 3e 20 00    	mov    0x203e76(%rip),%edi        # 605368 <completed.7585+0x20>
  4014f2:	e8 4d ff ff ff       	callq  401444 <fun4>
  4014f7:	3b 44 24 04          	cmp    0x4(%rsp),%eax		# after <fun4> eax must equal 4
  4014fb:	74 05                	je     401502 <phase4+0x56>
  4014fd:	e8 2e 08 00 00       	callq  401d30 <explode_bomb>
  401502:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  401507:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  40150e:	00 00 
  401510:	74 05                	je     401517 <phase4+0x6b>
  401512:	e8 29 f8 ff ff       	callq  400d40 <__stack_chk_fail@plt>
  401517:	48 83 c4 18          	add    $0x18,%rsp
  40151b:	c3                   	retq   
  40151c:	48 83 ec 08          	sub    $0x8,%rsp
  401520:	e8 9b f9 ff ff       	callq  400ec0 <rand@plt>
  401525:	ba 89 88 88 88       	mov    $0x88888889,%edx
  40152a:	89 c1                	mov    %eax,%ecx
  40152c:	f7 ea                	imul   %edx
  40152e:	89 c8                	mov    %ecx,%eax
  401530:	c1 f8 1f             	sar    $0x1f,%eax
  401533:	01 ca                	add    %ecx,%edx
  401535:	c1 fa 03             	sar    $0x3,%edx
  401538:	29 c2                	sub    %eax,%edx
  40153a:	89 d0                	mov    %edx,%eax
  40153c:	c1 e0 04             	shl    $0x4,%eax
  40153f:	29 d0                	sub    %edx,%eax
  401541:	29 c1                	sub    %eax,%ecx
  401543:	83 c1 01             	add    $0x1,%ecx
  401546:	89 0d 18 3e 20 00    	mov    %ecx,0x203e18(%rip)        # 605364 <completed.7585+0x1c>
  40154c:	48 83 c4 08          	add    $0x8,%rsp
  401550:	c3                   	retq   

0000000000401551 <phase5>:
  401551:	48 83 ec 18          	sub    $0x18,%rsp
  401555:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40155c:	00 00 
  40155e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  401563:	31 c0                	xor    %eax,%eax
  401565:	48 8d 4c 24 04       	lea    0x4(%rsp),%rcx
  40156a:	48 89 e2             	mov    %rsp,%rdx
  40156d:	be 3c 39 40 00       	mov    $0x40393c,%esi	
  401572:	e8 b9 f8 ff ff       	callq  400e30 <__isoc99_sscanf@plt>
  401577:	83 f8 01             	cmp    $0x1,%eax
  40157a:	7f 05                	jg     401581 <phase5+0x30>
  40157c:	e8 af 07 00 00       	callq  401d30 <explode_bomb>
  401581:	8b 04 24             	mov    (%rsp),%eax
  401584:	83 e0 0f             	and    $0xf,%eax
  401587:	89 04 24             	mov    %eax,(%rsp)
  40158a:	b9 00 00 00 00       	mov    $0x0,%ecx
  40158f:	ba 00 00 00 00       	mov    $0x0,%edx
  401594:	eb 0f                	jmp    4015a5 <phase5+0x54>
  401596:	83 c2 01             	add    $0x1,%edx		# Loop until eax==0xF, edx marks number of iterations (SHOULD BE 2)
  401599:	8b 04 85 c0 30 40 00 	mov    0x4030c0(,%rax,4),%eax	
  4015a0:	89 04 24             	mov    %eax,(%rsp)
  4015a3:	01 c1                	add    %eax,%ecx		# ecx = total of all eax values in all iterations starting at 0
  4015a5:	48 63 04 24          	movslq (%rsp),%rax
  4015a9:	83 f8 0f             	cmp    $0xf,%eax
  4015ac:	75 e8                	jne    401596 <phase5+0x45>	# End of loop
  4015ae:	3b 15 b0 3d 20 00    	cmp    0x203db0(%rip),%edx        # 605364 <completed.7585+0x1c>
  4015b4:	75 06                	jne    4015bc <phase5+0x6b>
  4015b6:	3b 4c 24 04          	cmp    0x4(%rsp),%ecx
  4015ba:	74 05                	je     4015c1 <phase5+0x70>
  4015bc:	e8 6f 07 00 00       	callq  401d30 <explode_bomb>
  4015c1:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4015c6:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  4015cd:	00 00 
  4015cf:	74 05                	je     4015d6 <phase5+0x85>
  4015d1:	e8 6a f7 ff ff       	callq  400d40 <__stack_chk_fail@plt>
  4015d6:	48 83 c4 18          	add    $0x18,%rsp
  4015da:	c3                   	retq   
  4015db:	48 83 ec 08          	sub    $0x8,%rsp
  4015df:	e8 dc f8 ff ff       	callq  400ec0 <rand@plt>
  4015e4:	25 ff ff 00 00       	and    $0xffff,%eax
  4015e9:	89 05 71 3b 20 00    	mov    %eax,0x203b71(%rip)        # 605160 <__dso_handle+0x18>
  4015ef:	e8 cc f8 ff ff       	callq  400ec0 <rand@plt>
  4015f4:	25 ff ff 00 00       	and    $0xffff,%eax
  4015f9:	89 05 71 3b 20 00    	mov    %eax,0x203b71(%rip)        # 605170 <__dso_handle+0x28>
  4015ff:	e8 bc f8 ff ff       	callq  400ec0 <rand@plt>
  401604:	25 ff ff 00 00       	and    $0xffff,%eax
  401609:	89 05 71 3b 20 00    	mov    %eax,0x203b71(%rip)        # 605180 <__dso_handle+0x38>
  40160f:	e8 ac f8 ff ff       	callq  400ec0 <rand@plt>
  401614:	25 ff ff 00 00       	and    $0xffff,%eax
  401619:	89 05 71 3b 20 00    	mov    %eax,0x203b71(%rip)        # 605190 <__dso_handle+0x48>
  40161f:	e8 9c f8 ff ff       	callq  400ec0 <rand@plt>
  401624:	25 ff ff 00 00       	and    $0xffff,%eax
  401629:	89 05 71 3b 20 00    	mov    %eax,0x203b71(%rip)        # 6051a0 <__dso_handle+0x58>
  40162f:	e8 8c f8 ff ff       	callq  400ec0 <rand@plt>
  401634:	25 ff ff 00 00       	and    $0xffff,%eax
  401639:	89 05 71 3b 20 00    	mov    %eax,0x203b71(%rip)        # 6051b0 <__dso_handle+0x68>
  40163f:	48 83 c4 08          	add    $0x8,%rsp
  401643:	c3                   	retq   

0000000000401644 <phase6>:
  401644:	41 54                	push   %r12				
  401646:	55                   	push   %rbp
  401647:	53                   	push   %rbx
  401648:	48 83 ec 60          	sub    $0x60,%rsp
  40164c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  401653:	00 00 
  401655:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
  40165a:	31 c0                	xor    %eax,%eax
  40165c:	48 89 e6             	mov    %rsp,%rsi
  40165f:	e8 0c 07 00 00       	callq  401d70 <read_six_numbers>
  401664:	bd 00 00 00 00       	mov    $0x0,%ebp
  401669:	eb 3a                	jmp    4016a5 <phase6+0x61>
  40166b:	48 63 c5             	movslq %ebp,%rax
  40166e:	8b 04 84             	mov    (%rsp,%rax,4),%eax
  401671:	83 e8 01             	sub    $0x1,%eax
  401674:	83 f8 05             	cmp    $0x5,%eax
  401677:	76 05                	jbe    40167e <phase6+0x3a>
  401679:	e8 b2 06 00 00       	callq  401d30 <explode_bomb>
  40167e:	44 8d 65 01          	lea    0x1(%rbp),%r12d
  401682:	44 89 e3             	mov    %r12d,%ebx
  401685:	eb 16                	jmp    40169d <phase6+0x59>
  401687:	48 63 c5             	movslq %ebp,%rax
  40168a:	48 63 d3             	movslq %ebx,%rdx
  40168d:	8b 3c 94             	mov    (%rsp,%rdx,4),%edi
  401690:	39 3c 84             	cmp    %edi,(%rsp,%rax,4)
  401693:	75 05                	jne    40169a <phase6+0x56>
  401695:	e8 96 06 00 00       	callq  401d30 <explode_bomb>
  40169a:	83 c3 01             	add    $0x1,%ebx		# Loop that iterates 6 times
  40169d:	83 fb 05             	cmp    $0x5,%ebx		# to set ebx to 6
  4016a0:	7e e5                	jle    401687 <phase6+0x43>	# 
  4016a2:	44 89 e5             	mov    %r12d,%ebp
  4016a5:	83 fd 05             	cmp    $0x5,%ebp
  4016a8:	7e c1                	jle    40166b <phase6+0x27>
  4016aa:	b8 00 00 00 00       	mov    $0x0,%eax
  4016af:	eb 11                	jmp    4016c2 <phase6+0x7e>
  4016b1:	48 63 c8             	movslq %eax,%rcx
  4016b4:	ba 07 00 00 00       	mov    $0x7,%edx
  4016b9:	2b 14 8c             	sub    (%rsp,%rcx,4),%edx
  4016bc:	89 14 8c             	mov    %edx,(%rsp,%rcx,4)
  4016bf:	83 c0 01             	add    $0x1,%eax
  4016c2:	83 f8 05             	cmp    $0x5,%eax
  4016c5:	7e ea                	jle    4016b1 <phase6+0x6d>
  4016c7:	be 00 00 00 00       	mov    $0x0,%esi
  4016cc:	eb 23                	jmp    4016f1 <phase6+0xad>
  4016ce:	48 8b 52 08          	mov    0x8(%rdx),%rdx
  4016d2:	83 c0 01             	add    $0x1,%eax
  4016d5:	eb 0a                	jmp    4016e1 <phase6+0x9d>
  4016d7:	b8 01 00 00 00       	mov    $0x1,%eax
  4016dc:	ba 60 51 60 00       	mov    $0x605160,%edx
  4016e1:	48 63 ce             	movslq %esi,%rcx
  4016e4:	3b 04 8c             	cmp    (%rsp,%rcx,4),%eax
  4016e7:	7c e5                	jl     4016ce <phase6+0x8a>
  4016e9:	48 89 54 cc 20       	mov    %rdx,0x20(%rsp,%rcx,8)
  4016ee:	83 c6 01             	add    $0x1,%esi
  4016f1:	83 fe 05             	cmp    $0x5,%esi
  4016f4:	7e e1                	jle    4016d7 <phase6+0x93>
  4016f6:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
  4016fb:	48 89 d9             	mov    %rbx,%rcx
  4016fe:	b8 01 00 00 00       	mov    $0x1,%eax
  401703:	eb 12                	jmp    401717 <phase6+0xd3>
  401705:	48 63 d0             	movslq %eax,%rdx
  401708:	48 8b 54 d4 20       	mov    0x20(%rsp,%rdx,8),%rdx
  40170d:	48 89 51 08          	mov    %rdx,0x8(%rcx)
  401711:	83 c0 01             	add    $0x1,%eax
  401714:	48 89 d1             	mov    %rdx,%rcx
  401717:	83 f8 05             	cmp    $0x5,%eax
  40171a:	7e e9                	jle    401705 <phase6+0xc1>
  40171c:	48 c7 41 08 00 00 00 	movq   $0x0,0x8(%rcx)
  401723:	00 
  401724:	bd 00 00 00 00       	mov    $0x0,%ebp
  401729:	eb 16                	jmp    401741 <phase6+0xfd>
  40172b:	48 8b 43 08          	mov    0x8(%rbx),%rax		# Using loop compare each node to the next, exploding if the next is not  
  40172f:	8b 00                	mov    (%rax),%eax		# greater than the previous one
  401731:	39 03                	cmp    %eax,(%rbx)
  401733:	7d 05                	jge    40173a <phase6+0xf6>
  401735:	e8 f6 05 00 00       	callq  401d30 <explode_bomb>
  40173a:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
  40173e:	83 c5 01             	add    $0x1,%ebp
  401741:	83 fd 04             	cmp    $0x4,%ebp
  401744:	7e e5                	jle    40172b <phase6+0xe7>
  401746:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
  40174b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  401752:	00 00 
  401754:	74 05                	je     40175b <phase6+0x117>
  401756:	e8 e5 f5 ff ff       	callq  400d40 <__stack_chk_fail@plt>
  40175b:	48 83 c4 60          	add    $0x60,%rsp
  40175f:	5b                   	pop    %rbx
  401760:	5d                   	pop    %rbp
  401761:	41 5c                	pop    %r12
  401763:	c3                   	retq   
  401764:	48 83 ec 08          	sub    $0x8,%rsp
  401768:	e8 53 f7 ff ff       	callq  400ec0 <rand@plt>
  40176d:	ba 5b f0 8d 21       	mov    $0x218df05b,%edx
  401772:	89 c1                	mov    %eax,%ecx
  401774:	f7 ea                	imul   %edx
  401776:	89 c8                	mov    %ecx,%eax
  401778:	c1 f8 1f             	sar    $0x1f,%eax
  40177b:	c1 fa 12             	sar    $0x12,%edx
  40177e:	29 c2                	sub    %eax,%edx
  401780:	69 d2 7f 84 1e 00    	imul   $0x1e847f,%edx,%edx
  401786:	29 d1                	sub    %edx,%ecx
  401788:	81 e9 3f 42 0f 00    	sub    $0xf423f,%ecx
  40178e:	89 0d cc 3b 20 00    	mov    %ecx,0x203bcc(%rip)        # 605360 <completed.7585+0x18>
  401794:	48 83 c4 08          	add    $0x8,%rsp
  401798:	c3                   	retq   

0000000000401799 <secret_phase>:
  401799:	53                   	push   %rbx
  40179a:	48 83 ec 20          	sub    $0x20,%rsp
  40179e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4017a5:	00 00 
  4017a7:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  4017ac:	31 c0                	xor    %eax,%eax
  4017ae:	e8 0d 07 00 00       	callq  401ec0 <read_line>
  4017b3:	ba 00 00 00 00       	mov    $0x0,%edx
  4017b8:	be 00 00 00 00       	mov    $0x0,%esi
  4017bd:	48 89 c7             	mov    %rax,%rdi
  4017c0:	e8 ab f6 ff ff       	callq  400e70 <strtoul@plt>
  4017c5:	89 44 24 10          	mov    %eax,0x10(%rsp)
  4017c9:	89 c7                	mov    %eax,%edi
  4017cb:	81 e7 00 00 80 7f    	and    $0x7f800000,%edi
  4017d1:	c1 ef 17             	shr    $0x17,%edi
  4017d4:	89 c6                	mov    %eax,%esi
  4017d6:	81 e6 ff ff 7f 00    	and    $0x7fffff,%esi
  4017dc:	c1 f8 1f             	sar    $0x1f,%eax
  4017df:	83 ff 7e             	cmp    $0x7e,%edi
  4017e2:	76 07                	jbe    4017eb <secret_phase+0x52>
  4017e4:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4017e9:	eb 05                	jmp    4017f0 <secret_phase+0x57>
  4017eb:	ba 00 00 00 00       	mov    $0x0,%edx
  4017f0:	81 ce 00 00 80 00    	or     $0x800000,%esi
  4017f6:	b9 96 00 00 00       	mov    $0x96,%ecx
  4017fb:	29 f9                	sub    %edi,%ecx
  4017fd:	d3 ee                	shr    %cl,%esi
  4017ff:	21 f2                	and    %esi,%edx
  401801:	89 d3                	mov    %edx,%ebx
  401803:	f7 db                	neg    %ebx
  401805:	31 d3                	xor    %edx,%ebx
  401807:	21 d8                	and    %ebx,%eax
  401809:	31 d0                	xor    %edx,%eax
  40180b:	89 c3                	mov    %eax,%ebx
  40180d:	3b 05 4d 3b 20 00    	cmp    0x203b4d(%rip),%eax        # 605360 <completed.7585+0x18>
  401813:	74 05                	je     40181a <secret_phase+0x81>
  401815:	e8 16 05 00 00       	callq  401d30 <explode_bomb>
  40181a:	89 5c 24 0c          	mov    %ebx,0xc(%rsp)
  40181e:	db 44 24 0c          	fildl  0xc(%rsp)
  401822:	d9 5c 24 14          	fstps  0x14(%rsp)
  401826:	ba 04 00 00 00       	mov    $0x4,%edx
  40182b:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
  401830:	48 8d 7c 24 14       	lea    0x14(%rsp),%rdi
  401835:	e8 76 f5 ff ff       	callq  400db0 <memcmp@plt>
  40183a:	85 c0                	test   %eax,%eax
  40183c:	74 05                	je     401843 <secret_phase+0xaa>
  40183e:	e8 ed 04 00 00       	callq  401d30 <explode_bomb>
  401843:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  401848:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  40184f:	00 00 
  401851:	74 05                	je     401858 <secret_phase+0xbf>
  401853:	e8 e8 f4 ff ff       	callq  400d40 <__stack_chk_fail@plt>
  401858:	48 83 c4 20          	add    $0x20,%rsp
  40185c:	5b                   	pop    %rbx
  40185d:	c3                   	retq   
  40185e:	66 90                	xchg   %ax,%ax

0000000000401860 <test_secret_phrase>:
  401860:	89 f8                	mov    %edi,%eax
  401862:	83 e0 fb             	and    $0xfffffffb,%eax
  401865:	83 f8 01             	cmp    $0x1,%eax
  401868:	0f 84 4a 01 00 00    	je     4019b8 <test_secret_phrase+0x158>
  40186e:	41 55                	push   %r13
  401870:	41 54                	push   %r12
  401872:	55                   	push   %rbp
  401873:	53                   	push   %rbx
  401874:	8d 5f ff             	lea    -0x1(%rdi),%ebx
  401877:	48 83 ec 08          	sub    $0x8,%rsp
  40187b:	83 fb 06             	cmp    $0x6,%ebx
  40187e:	74 71                	je     4018f1 <test_secret_phrase+0x91>
  401880:	83 ef 03             	sub    $0x3,%edi
  401883:	83 ff 01             	cmp    $0x1,%edi
  401886:	0f 86 e4 00 00 00    	jbe    401970 <test_secret_phrase+0x110>
  40188c:	48 63 db             	movslq %ebx,%rbx
  40188f:	48 8d 04 9b          	lea    (%rbx,%rbx,4),%rax
  401893:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
  401897:	48 8d 2c 85 60 54 60 	lea    0x605460(,%rax,4),%rbp
  40189e:	00 
  40189f:	48 89 ef             	mov    %rbp,%rdi
  4018a2:	e8 89 f4 ff ff       	callq  400d30 <strlen@plt>
  4018a7:	48 8d 78 04          	lea    0x4(%rax),%rdi
  4018ab:	48 89 c3             	mov    %rax,%rbx
  4018ae:	e8 5d f5 ff ff       	callq  400e10 <malloc@plt>
  4018b3:	48 8d 53 01          	lea    0x1(%rbx),%rdx
  4018b7:	48 89 ee             	mov    %rbp,%rsi
  4018ba:	48 89 c7             	mov    %rax,%rdi
  4018bd:	bd 06 00 00 00       	mov    $0x6,%ebp
  4018c2:	49 89 c4             	mov    %rax,%r12
  4018c5:	e8 36 f5 ff ff       	callq  400e00 <memcpy@plt>
  4018ca:	4c 89 e3             	mov    %r12,%rbx
  4018cd:	eb 10                	jmp    4018df <test_secret_phrase+0x7f>
  4018cf:	90                   	nop
  4018d0:	83 ed 01             	sub    $0x1,%ebp
  4018d3:	48 8d 58 01          	lea    0x1(%rax),%rbx
  4018d7:	8d 45 01             	lea    0x1(%rbp),%eax
  4018da:	83 f8 01             	cmp    $0x1,%eax
  4018dd:	7e 21                	jle    401900 <test_secret_phrase+0xa0>
  4018df:	be 20 00 00 00       	mov    $0x20,%esi
  4018e4:	48 89 df             	mov    %rbx,%rdi
  4018e7:	e8 64 f4 ff ff       	callq  400d50 <strchr@plt>
  4018ec:	48 85 c0             	test   %rax,%rax
  4018ef:	75 df                	jne    4018d0 <test_secret_phrase+0x70>
  4018f1:	31 c0                	xor    %eax,%eax
  4018f3:	48 83 c4 08          	add    $0x8,%rsp
  4018f7:	5b                   	pop    %rbx
  4018f8:	5d                   	pop    %rbp
  4018f9:	41 5c                	pop    %r12
  4018fb:	41 5d                	pop    %r13
  4018fd:	c3                   	retq   
  4018fe:	66 90                	xchg   %ax,%ax
  401900:	be 20 00 00 00       	mov    $0x20,%esi
  401905:	48 89 df             	mov    %rbx,%rdi
  401908:	e8 43 f4 ff ff       	callq  400d50 <strchr@plt>
  40190d:	48 85 c0             	test   %rax,%rax
  401910:	74 03                	je     401915 <test_secret_phrase+0xb5>
  401912:	c6 00 00             	movb   $0x0,(%rax)
  401915:	48 89 df             	mov    %rbx,%rdi
  401918:	e8 13 f4 ff ff       	callq  400d30 <strlen@plt>
  40191d:	48 8d 78 04          	lea    0x4(%rax),%rdi
  401921:	48 89 c5             	mov    %rax,%rbp
  401924:	e8 e7 f4 ff ff       	callq  400e10 <malloc@plt>
  401929:	48 8d 55 01          	lea    0x1(%rbp),%rdx
  40192d:	48 89 de             	mov    %rbx,%rsi
  401930:	48 89 c7             	mov    %rax,%rdi
  401933:	49 89 c5             	mov    %rax,%r13
  401936:	e8 c5 f4 ff ff       	callq  400e00 <memcpy@plt>
  40193b:	4c 89 e7             	mov    %r12,%rdi
  40193e:	e8 9d f3 ff ff       	callq  400ce0 <free@plt>
  401943:	4c 89 ef             	mov    %r13,%rdi
  401946:	be b0 38 40 00       	mov    $0x4038b0,%esi
  40194b:	e8 72 f8 ff ff       	callq  4011c2 <strings_not_equal>
  401950:	85 c0                	test   %eax,%eax
  401952:	4c 89 ef             	mov    %r13,%rdi
  401955:	75 64                	jne    4019bb <test_secret_phrase+0x15b>
  401957:	e8 84 f3 ff ff       	callq  400ce0 <free@plt>
  40195c:	48 83 c4 08          	add    $0x8,%rsp
  401960:	b8 01 00 00 00       	mov    $0x1,%eax
  401965:	5b                   	pop    %rbx
  401966:	5d                   	pop    %rbp
  401967:	41 5c                	pop    %r12
  401969:	41 5d                	pop    %r13
  40196b:	c3                   	retq   
  40196c:	0f 1f 40 00          	nopl   0x0(%rax)
  401970:	48 63 c3             	movslq %ebx,%rax
  401973:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
  401977:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
  40197b:	4c 8d 2c 85 60 54 60 	lea    0x605460(,%rax,4),%r13
  401982:	00 
  401983:	4c 89 ef             	mov    %r13,%rdi
  401986:	e8 a5 f3 ff ff       	callq  400d30 <strlen@plt>
  40198b:	48 8d 78 04          	lea    0x4(%rax),%rdi
  40198f:	48 89 c5             	mov    %rax,%rbp
  401992:	e8 79 f4 ff ff       	callq  400e10 <malloc@plt>
  401997:	48 8d 55 01          	lea    0x1(%rbp),%rdx
  40199b:	4c 89 ee             	mov    %r13,%rsi
  40199e:	48 89 c7             	mov    %rax,%rdi
  4019a1:	bd 05 00 00 00       	mov    $0x5,%ebp
  4019a6:	49 89 c4             	mov    %rax,%r12
  4019a9:	29 dd                	sub    %ebx,%ebp
  4019ab:	e8 50 f4 ff ff       	callq  400e00 <memcpy@plt>
  4019b0:	e9 15 ff ff ff       	jmpq   4018ca <test_secret_phrase+0x6a>
  4019b5:	0f 1f 00             	nopl   (%rax)
  4019b8:	31 c0                	xor    %eax,%eax
  4019ba:	c3                   	retq   
  4019bb:	e8 20 f3 ff ff       	callq  400ce0 <free@plt>
  4019c0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4019c5:	e9 29 ff ff ff       	jmpq   4018f3 <test_secret_phrase+0x93>
  4019ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004019d0 <invalid_phase>:
  4019d0:	48 89 fa             	mov    %rdi,%rdx
  4019d3:	48 83 ec 08          	sub    $0x8,%rsp
  4019d7:	bf 01 00 00 00       	mov    $0x1,%edi
  4019dc:	be c8 38 40 00       	mov    $0x4038c8,%esi
  4019e1:	31 c0                	xor    %eax,%eax
  4019e3:	e8 68 f4 ff ff       	callq  400e50 <__printf_chk@plt>
  4019e8:	bf 08 00 00 00       	mov    $0x8,%edi
  4019ed:	e8 8e f4 ff ff       	callq  400e80 <exit@plt>
  4019f2:	0f 1f 40 00          	nopl   0x0(%rax)
  4019f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4019fd:	00 00 00 
  401a00:	55                   	push   %rbp
  401a01:	53                   	push   %rbx
  401a02:	be 50 1e 40 00       	mov    $0x401e50,%esi
  401a07:	bf 02 00 00 00       	mov    $0x2,%edi
  401a0c:	48 81 ec 18 20 00 00 	sub    $0x2018,%rsp
  401a13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  401a1a:	00 00 
  401a1c:	48 89 84 24 08 20 00 	mov    %rax,0x2008(%rsp)
  401a23:	00 
  401a24:	31 c0                	xor    %eax,%eax
  401a26:	e8 a5 f3 ff ff       	callq  400dd0 <signal@plt>
  401a2b:	be 50 1e 40 00       	mov    $0x401e50,%esi
  401a30:	bf 09 00 00 00       	mov    $0x9,%edi
  401a35:	e8 96 f3 ff ff       	callq  400dd0 <signal@plt>
  401a3a:	be c0 1d 40 00       	mov    $0x401dc0,%esi
  401a3f:	bf 0a 00 00 00       	mov    $0xa,%edi
  401a44:	e8 87 f3 ff ff       	callq  400dd0 <signal@plt>
  401a49:	be b0 1d 40 00       	mov    $0x401db0,%esi
  401a4e:	bf 0b 00 00 00       	mov    $0xb,%edi
  401a53:	e8 78 f3 ff ff       	callq  400dd0 <signal@plt>
  401a58:	be b0 1d 40 00       	mov    $0x401db0,%esi
  401a5d:	bf 04 00 00 00       	mov    $0x4,%edi
  401a62:	e8 69 f3 ff ff       	callq  400dd0 <signal@plt>
  401a67:	48 89 e7             	mov    %rsp,%rdi
  401a6a:	e8 91 11 00 00       	callq  402c00 <init_driver>
  401a6f:	85 c0                	test   %eax,%eax
  401a71:	0f 88 d1 00 00 00    	js     401b48 <invalid_phase+0x178>
  401a77:	bf f8 52 60 00       	mov    $0x6052f8,%edi
  401a7c:	e8 af f2 ff ff       	callq  400d30 <strlen@plt>
  401a81:	bf e0 52 60 00       	mov    $0x6052e0,%edi
  401a86:	48 89 c5             	mov    %rax,%rbp
  401a89:	89 c3                	mov    %eax,%ebx
  401a8b:	e8 a0 f2 ff ff       	callq  400d30 <strlen@plt>
  401a90:	85 ed                	test   %ebp,%ebp
  401a92:	41 89 c0             	mov    %eax,%r8d
  401a95:	0f 8e a1 00 00 00    	jle    401b3c <invalid_phase+0x16c>
  401a9b:	31 d2                	xor    %edx,%edx
  401a9d:	be 05 15 00 00       	mov    $0x1505,%esi
  401aa2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401aa8:	0f be 8a f8 52 60 00 	movsbl 0x6052f8(%rdx),%ecx
  401aaf:	89 f7                	mov    %esi,%edi
  401ab1:	48 83 c2 01          	add    $0x1,%rdx
  401ab5:	c1 e7 05             	shl    $0x5,%edi
  401ab8:	01 f9                	add    %edi,%ecx
  401aba:	01 ce                	add    %ecx,%esi
  401abc:	39 d3                	cmp    %edx,%ebx
  401abe:	7f e8                	jg     401aa8 <invalid_phase+0xd8>
  401ac0:	8d 3c f6             	lea    (%rsi,%rsi,8),%edi
  401ac3:	85 c0                	test   %eax,%eax
  401ac5:	7e 22                	jle    401ae9 <invalid_phase+0x119>
  401ac7:	31 c0                	xor    %eax,%eax
  401ac9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401ad0:	0f be 90 e0 52 60 00 	movsbl 0x6052e0(%rax),%edx
  401ad7:	89 f9                	mov    %edi,%ecx
  401ad9:	48 83 c0 01          	add    $0x1,%rax
  401add:	c1 e1 05             	shl    $0x5,%ecx
  401ae0:	01 ca                	add    %ecx,%edx
  401ae2:	01 d7                	add    %edx,%edi
  401ae4:	41 39 c0             	cmp    %eax,%r8d
  401ae7:	7f e7                	jg     401ad0 <invalid_phase+0x100>
  401ae9:	e8 b2 f2 ff ff       	callq  400da0 <srand@plt>
  401aee:	31 c0                	xor    %eax,%eax
  401af0:	e8 1a f7 ff ff       	callq  40120f <strings_not_equal+0x4d>
  401af5:	31 c0                	xor    %eax,%eax
  401af7:	e8 72 f7 ff ff       	callq  40126e <phase1+0x1c>
  401afc:	31 c0                	xor    %eax,%eax
  401afe:	e8 27 f8 ff ff       	callq  40132a <phase2+0x81>
  401b03:	31 c0                	xor    %eax,%eax
  401b05:	e8 74 f9 ff ff       	callq  40147e <fun4+0x3a>
  401b0a:	31 c0                	xor    %eax,%eax
  401b0c:	e8 0b fa ff ff       	callq  40151c <phase4+0x70>
  401b11:	31 c0                	xor    %eax,%eax
  401b13:	e8 c3 fa ff ff       	callq  4015db <phase5+0x8a>
  401b18:	31 c0                	xor    %eax,%eax
  401b1a:	e8 45 fc ff ff       	callq  401764 <phase6+0x120>
  401b1f:	48 8b 84 24 08 20 00 	mov    0x2008(%rsp),%rax
  401b26:	00 
  401b27:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  401b2e:	00 00 
  401b30:	75 11                	jne    401b43 <invalid_phase+0x173>
  401b32:	48 81 c4 18 20 00 00 	add    $0x2018,%rsp
  401b39:	5b                   	pop    %rbx
  401b3a:	5d                   	pop    %rbp
  401b3b:	c3                   	retq   
  401b3c:	bf 2d bd 00 00       	mov    $0xbd2d,%edi
  401b41:	eb 80                	jmp    401ac3 <invalid_phase+0xf3>
  401b43:	e8 f8 f1 ff ff       	callq  400d40 <__stack_chk_fail@plt>
  401b48:	bf 01 00 00 00       	mov    $0x1,%edi
  401b4d:	48 89 e2             	mov    %rsp,%rdx
  401b50:	be d9 38 40 00       	mov    $0x4038d9,%esi
  401b55:	31 c0                	xor    %eax,%eax
  401b57:	e8 f4 f2 ff ff       	callq  400e50 <__printf_chk@plt>
  401b5c:	bf 08 00 00 00       	mov    $0x8,%edi
  401b61:	e8 1a f3 ff ff       	callq  400e80 <exit@plt>
  401b66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401b6d:	00 00 00 
  401b70:	55                   	push   %rbp
  401b71:	53                   	push   %rbx
  401b72:	bf f8 52 60 00       	mov    $0x6052f8,%edi
  401b77:	48 83 ec 08          	sub    $0x8,%rsp
  401b7b:	e8 b0 f1 ff ff       	callq  400d30 <strlen@plt>
  401b80:	bf e0 52 60 00       	mov    $0x6052e0,%edi
  401b85:	48 89 c5             	mov    %rax,%rbp
  401b88:	89 c3                	mov    %eax,%ebx
  401b8a:	e8 a1 f1 ff ff       	callq  400d30 <strlen@plt>
  401b8f:	85 ed                	test   %ebp,%ebp
  401b91:	41 89 c0             	mov    %eax,%r8d
  401b94:	0f 8e 8b 00 00 00    	jle    401c25 <invalid_phase+0x255>
  401b9a:	31 d2                	xor    %edx,%edx
  401b9c:	be 05 15 00 00       	mov    $0x1505,%esi
  401ba1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401ba8:	0f be 8a f8 52 60 00 	movsbl 0x6052f8(%rdx),%ecx
  401baf:	89 f7                	mov    %esi,%edi
  401bb1:	48 83 c2 01          	add    $0x1,%rdx
  401bb5:	c1 e7 05             	shl    $0x5,%edi
  401bb8:	01 f9                	add    %edi,%ecx
  401bba:	01 ce                	add    %ecx,%esi
  401bbc:	39 d3                	cmp    %edx,%ebx
  401bbe:	7f e8                	jg     401ba8 <invalid_phase+0x1d8>
  401bc0:	8d 3c f6             	lea    (%rsi,%rsi,8),%edi
  401bc3:	85 c0                	test   %eax,%eax
  401bc5:	7e 22                	jle    401be9 <invalid_phase+0x219>
  401bc7:	31 c0                	xor    %eax,%eax
  401bc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401bd0:	0f be 90 e0 52 60 00 	movsbl 0x6052e0(%rax),%edx
  401bd7:	89 f9                	mov    %edi,%ecx
  401bd9:	48 83 c0 01          	add    $0x1,%rax
  401bdd:	c1 e1 05             	shl    $0x5,%ecx
  401be0:	01 ca                	add    %ecx,%edx
  401be2:	01 d7                	add    %edx,%edi
  401be4:	41 39 c0             	cmp    %eax,%r8d
  401be7:	7f e7                	jg     401bd0 <invalid_phase+0x200>
  401be9:	e8 b2 f1 ff ff       	callq  400da0 <srand@plt>
  401bee:	31 c0                	xor    %eax,%eax
  401bf0:	e8 1a f6 ff ff       	callq  40120f <strings_not_equal+0x4d>
  401bf5:	31 c0                	xor    %eax,%eax
  401bf7:	e8 72 f6 ff ff       	callq  40126e <phase1+0x1c>
  401bfc:	31 c0                	xor    %eax,%eax
  401bfe:	e8 27 f7 ff ff       	callq  40132a <phase2+0x81>
  401c03:	31 c0                	xor    %eax,%eax
  401c05:	e8 74 f8 ff ff       	callq  40147e <fun4+0x3a>
  401c0a:	31 c0                	xor    %eax,%eax
  401c0c:	e8 0b f9 ff ff       	callq  40151c <phase4+0x70>
  401c11:	31 c0                	xor    %eax,%eax
  401c13:	e8 c3 f9 ff ff       	callq  4015db <phase5+0x8a>
  401c18:	48 83 c4 08          	add    $0x8,%rsp
  401c1c:	31 c0                	xor    %eax,%eax
  401c1e:	5b                   	pop    %rbx
  401c1f:	5d                   	pop    %rbp
  401c20:	e9 3f fb ff ff       	jmpq   401764 <phase6+0x120>
  401c25:	bf 2d bd 00 00       	mov    $0xbd2d,%edi
  401c2a:	eb 97                	jmp    401bc3 <invalid_phase+0x1f3>
  401c2c:	0f 1f 40 00          	nopl   0x0(%rax)
  401c30:	41 54                	push   %r12
  401c32:	55                   	push   %rbp
  401c33:	53                   	push   %rbx
  401c34:	89 fb                	mov    %edi,%ebx
  401c36:	48 81 ec 10 40 00 00 	sub    $0x4010,%rsp
  401c3d:	8b 2d fd 37 20 00    	mov    0x2037fd(%rip),%ebp        # 605440 <num_input_strings>
  401c43:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  401c4a:	00 00 
  401c4c:	48 89 84 24 08 40 00 	mov    %rax,0x4008(%rsp)
  401c53:	00 
  401c54:	31 c0                	xor    %eax,%eax
  401c56:	8d 45 ff             	lea    -0x1(%rbp),%eax
  401c59:	48 98                	cltq   
  401c5b:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
  401c5f:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
  401c63:	4c 8d 24 85 60 54 60 	lea    0x605460(,%rax,4),%r12
  401c6a:	00 
  401c6b:	4c 89 e7             	mov    %r12,%rdi
  401c6e:	e8 bd f0 ff ff       	callq  400d30 <strlen@plt>
  401c73:	48 83 c0 64          	add    $0x64,%rax
  401c77:	48 3d 00 20 00 00    	cmp    $0x2000,%rax
  401c7d:	77 79                	ja     401cf8 <invalid_phase+0x328>
  401c7f:	41 54                	push   %r12
  401c81:	55                   	push   %rbp
  401c82:	85 db                	test   %ebx,%ebx
  401c84:	44 8b 05 79 36 20 00 	mov    0x203679(%rip),%r8d        # 605304 <bomb_id>
  401c8b:	b8 f3 38 40 00       	mov    $0x4038f3,%eax
  401c90:	41 b9 fb 38 40 00    	mov    $0x4038fb,%r9d
  401c96:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
  401c9b:	4c 0f 45 c8          	cmovne %rax,%r9
  401c9f:	b9 04 39 40 00       	mov    $0x403904,%ecx
  401ca4:	ba 00 20 00 00       	mov    $0x2000,%edx
  401ca9:	be 01 00 00 00       	mov    $0x1,%esi
  401cae:	31 c0                	xor    %eax,%eax
  401cb0:	e8 2b f2 ff ff       	callq  400ee0 <__sprintf_chk@plt>
  401cb5:	4c 8d 84 24 10 20 00 	lea    0x2010(%rsp),%r8
  401cbc:	00 
  401cbd:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  401cc2:	31 c9                	xor    %ecx,%ecx
  401cc4:	be e0 52 60 00       	mov    $0x6052e0,%esi
  401cc9:	bf f8 52 60 00       	mov    $0x6052f8,%edi
  401cce:	e8 2d 11 00 00       	callq  402e00 <init_driver+0x200>
  401cd3:	85 c0                	test   %eax,%eax
  401cd5:	5a                   	pop    %rdx
  401cd6:	59                   	pop    %rcx
  401cd7:	78 3f                	js     401d18 <invalid_phase+0x348>
  401cd9:	48 8b 84 24 08 40 00 	mov    0x4008(%rsp),%rax
  401ce0:	00 
  401ce1:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  401ce8:	00 00 
  401cea:	75 27                	jne    401d13 <invalid_phase+0x343>
  401cec:	48 81 c4 10 40 00 00 	add    $0x4010,%rsp
  401cf3:	5b                   	pop    %rbx
  401cf4:	5d                   	pop    %rbp
  401cf5:	41 5c                	pop    %r12
  401cf7:	c3                   	retq   
  401cf8:	bf 01 00 00 00       	mov    $0x1,%edi
  401cfd:	be c8 39 40 00       	mov    $0x4039c8,%esi
  401d02:	31 c0                	xor    %eax,%eax
  401d04:	e8 47 f1 ff ff       	callq  400e50 <__printf_chk@plt>
  401d09:	bf 08 00 00 00       	mov    $0x8,%edi
  401d0e:	e8 6d f1 ff ff       	callq  400e80 <exit@plt>
  401d13:	e8 28 f0 ff ff       	callq  400d40 <__stack_chk_fail@plt>
  401d18:	48 8d bc 24 00 20 00 	lea    0x2000(%rsp),%rdi
  401d1f:	00 
  401d20:	e8 eb ef ff ff       	callq  400d10 <puts@plt>
  401d25:	31 ff                	xor    %edi,%edi
  401d27:	e8 54 f1 ff ff       	callq  400e80 <exit@plt>
  401d2c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401d30 <explode_bomb>:
  401d30:	48 83 ec 08          	sub    $0x8,%rsp
  401d34:	bf 10 39 40 00       	mov    $0x403910,%edi
  401d39:	e8 d2 ef ff ff       	callq  400d10 <puts@plt>
  401d3e:	bf 19 39 40 00       	mov    $0x403919,%edi
  401d43:	e8 c8 ef ff ff       	callq  400d10 <puts@plt>
  401d48:	31 ff                	xor    %edi,%edi
  401d4a:	e8 e1 fe ff ff       	callq  401c30 <invalid_phase+0x260>
  401d4f:	bf f0 39 40 00       	mov    $0x4039f0,%edi
  401d54:	e8 b7 ef ff ff       	callq  400d10 <puts@plt>
  401d59:	bf 08 00 00 00       	mov    $0x8,%edi
  401d5e:	e8 1d f1 ff ff       	callq  400e80 <exit@plt>
  401d63:	0f 1f 00             	nopl   (%rax)
  401d66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401d6d:	00 00 00 

0000000000401d70 <read_six_numbers>:						# Seems to only check if input contains six numbers...

  401d70:	48 8d 46 14          	lea    0x14(%rsi),%rax			# Loads bad address (%rsi + 0x14) into %rax to be changed later
  401d74:	48 83 ec 08          	sub    $0x8,%rsp			# Pop 8 bytes from stack pointer, now points to "mov $0xFFFFFFDE, %eax"
  401d78:	48 8d 4e 04          	lea    0x4(%rsi),%rcx			# Loads address for "add %al,(%eax)" into %rcx 
  401d7c:	4c 8d 4e 0c          	lea    0xc(%rsi),%r9			# Loads slightly diff address for same instruction as above into %r9
  401d80:	4c 8d 46 08          	lea    0x8(%rsi),%r8			# Loads instruc "pop %rdx" into %r8
  401d84:	48 89 f2             	mov    %rsi,%rdx			# Copies "orb $0x40,(%rdi)" into %rdx. Note %rdi contains input string
  401d87:	50                   	push   %rax				# %rsp now points to "mov $0xdd,%ah"
  401d88:	48 8d 46 10          	lea    0x10(%rsi),%rax			# Loads instruc "mov $0xFFFFFFDE,%eax" into %rax
  401d8c:	be 30 39 40 00       	mov    $0x403930,%esi			# Stores value 0x403930 in 32-bit source index reg
  401d91:	50                   	push   %rax				# %rsp still points to "mov $0xdd,%ah"
  401d92:	31 c0                	xor    %eax,%eax			# Clear eax by setting to 0
  401d94:	e8 97 f0 ff ff       	callq  400e30 <__isoc99_sscanf@plt>	# Presumably uses parameter in %rsi which is string "%d %d %d %d %d %d"
  401d99:	83 f8 05             	cmp    $0x5,%eax                        # If < 6 numbers were input
  401d9c:	5a                   	pop    %rdx				# Still has instruc "mov $0xdd,%ah"
  401d9d:	59                   	pop    %rcx				# Now has instruc "mov %0xFFFFFFDE,%eax"		
  401d9e:	7e 05                	jle    401da5 <read_six_numbers+0x35> 	# explode if < 6 numbers were input
  401da0:	48 83 c4 08          	add    $0x8,%rsp			# Push 8 bytes to stack pointer, now has bad address
  401da4:	c3                   	retq   
  401da5:	e8 86 ff ff ff       	callq  401d30 <explode_bomb>
  401daa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401db0:	48 83 ec 08          	sub    $0x8,%rsp
  401db4:	e8 77 ff ff ff       	callq  401d30 <explode_bomb>
  401db9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401dc0 <sigusr1_handler>:
  401dc0:	8b 05 82 36 20 00    	mov    0x203682(%rip),%eax        # 605448 <count.5639>
  401dc6:	83 c0 01             	add    $0x1,%eax
  401dc9:	83 f8 01             	cmp    $0x1,%eax
  401dcc:	89 05 76 36 20 00    	mov    %eax,0x203676(%rip)        # 605448 <count.5639>
  401dd2:	74 1c                	je     401df0 <sigusr1_handler+0x30>
  401dd4:	83 f8 02             	cmp    $0x2,%eax
  401dd7:	74 27                	je     401e00 <sigusr1_handler+0x40>
  401dd9:	83 f8 03             	cmp    $0x3,%eax
  401ddc:	74 32                	je     401e10 <sigusr1_handler+0x50>
  401dde:	83 f8 04             	cmp    $0x4,%eax
  401de1:	74 3d                	je     401e20 <sigusr1_handler+0x60>
  401de3:	7f 45                	jg     401e2a <sigusr1_handler+0x6a>
  401de5:	f3 c3                	repz retq 
  401de7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  401dee:	00 00 
  401df0:	bf 18 3a 40 00       	mov    $0x403a18,%edi
  401df5:	e9 16 ef ff ff       	jmpq   400d10 <puts@plt>
  401dfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401e00:	bf 68 3a 40 00       	mov    $0x403a68,%edi
  401e05:	e9 06 ef ff ff       	jmpq   400d10 <puts@plt>
  401e0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401e10:	bf b8 3a 40 00       	mov    $0x403ab8,%edi
  401e15:	e9 f6 ee ff ff       	jmpq   400d10 <puts@plt>
  401e1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401e20:	bf 00 3b 40 00       	mov    $0x403b00,%edi
  401e25:	e9 e6 ee ff ff       	jmpq   400d10 <puts@plt>
  401e2a:	50                   	push   %rax
  401e2b:	bf 48 3b 40 00       	mov    $0x403b48,%edi
  401e30:	e8 db ee ff ff       	callq  400d10 <puts@plt>
  401e35:	bf 98 3b 40 00       	mov    $0x403b98,%edi
  401e3a:	e8 d1 ee ff ff       	callq  400d10 <puts@plt>
  401e3f:	bf e8 3b 40 00       	mov    $0x403be8,%edi
  401e44:	e8 c7 ee ff ff       	callq  400d10 <puts@plt>
  401e49:	e8 e2 fe ff ff       	callq  401d30 <explode_bomb>
  401e4e:	66 90                	xchg   %ax,%ax
  401e50:	48 83 ec 08          	sub    $0x8,%rsp
  401e54:	83 3d e5 35 20 00 05 	cmpl   $0x5,0x2035e5(%rip)        # 605440 <num_input_strings>
  401e5b:	7e 4b                	jle    401ea8 <sigusr1_handler+0xe8>
  401e5d:	8b 05 e1 35 20 00    	mov    0x2035e1(%rip),%eax        # 605444 <count.5628>
  401e63:	83 c0 01             	add    $0x1,%eax
  401e66:	83 f8 01             	cmp    $0x1,%eax
  401e69:	89 05 d5 35 20 00    	mov    %eax,0x2035d5(%rip)        # 605444 <count.5628>
  401e6f:	74 0f                	je     401e80 <sigusr1_handler+0xc0>
  401e71:	83 f8 02             	cmp    $0x2,%eax
  401e74:	74 1a                	je     401e90 <sigusr1_handler+0xd0>
  401e76:	7f 35                	jg     401ead <sigusr1_handler+0xed>
  401e78:	48 83 c4 08          	add    $0x8,%rsp
  401e7c:	c3                   	retq   
  401e7d:	0f 1f 00             	nopl   (%rax)
  401e80:	bf 38 3c 40 00       	mov    $0x403c38,%edi
  401e85:	48 83 c4 08          	add    $0x8,%rsp
  401e89:	e9 82 ee ff ff       	jmpq   400d10 <puts@plt>
  401e8e:	66 90                	xchg   %ax,%ax
  401e90:	bf 60 3c 40 00       	mov    $0x403c60,%edi
  401e95:	e8 76 ee ff ff       	callq  400d10 <puts@plt>
  401e9a:	bf a0 3c 40 00       	mov    $0x403ca0,%edi
  401e9f:	48 83 c4 08          	add    $0x8,%rsp
  401ea3:	e9 68 ee ff ff       	jmpq   400d10 <puts@plt>
  401ea8:	e8 63 f0 ff ff       	callq  400f10 <sigint_handler.part.2>
  401ead:	bf d0 3c 40 00       	mov    $0x403cd0,%edi
  401eb2:	e8 59 ee ff ff       	callq  400d10 <puts@plt>
  401eb7:	e8 74 fe ff ff       	callq  401d30 <explode_bomb>
  401ebc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401ec0 <read_line>:
  401ec0:	55                   	push   %rbp
  401ec1:	53                   	push   %rbx
  401ec2:	48 83 ec 08          	sub    $0x8,%rsp
  401ec6:	48 63 05 73 35 20 00 	movslq 0x203573(%rip),%rax        # 605440 <num_input_strings>
  401ecd:	48 8b 15 7c 35 20 00 	mov    0x20357c(%rip),%rdx        # 605450 <infile>
  401ed4:	83 f8 07             	cmp    $0x7,%eax
  401ed7:	0f 84 73 01 00 00    	je     402050 <read_line+0x190>
  401edd:	0f 1f 00             	nopl   (%rax)
  401ee0:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
  401ee4:	be 64 00 00 00       	mov    $0x64,%esi
  401ee9:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
  401eed:	48 8d 3c 85 60 54 60 	lea    0x605460(,%rax,4),%rdi
  401ef4:	00 
  401ef5:	e8 c6 ee ff ff       	callq  400dc0 <fgets@plt>
  401efa:	48 85 c0             	test   %rax,%rax
  401efd:	48 89 c5             	mov    %rax,%rbp
  401f00:	75 19                	jne    401f1b <read_line+0x5b>
  401f02:	eb 7c                	jmp    401f80 <read_line+0xc0>
  401f04:	0f 1f 40 00          	nopl   0x0(%rax)
  401f08:	e8 c3 ef ff ff       	callq  400ed0 <__ctype_b_loc@plt>
  401f0d:	48 8b 00             	mov    (%rax),%rax
  401f10:	48 83 c5 01          	add    $0x1,%rbp
  401f14:	f6 44 58 01 20       	testb  $0x20,0x1(%rax,%rbx,2)
  401f19:	74 1d                	je     401f38 <read_line+0x78>
  401f1b:	48 0f be 5d 00       	movsbq 0x0(%rbp),%rbx
  401f20:	84 db                	test   %bl,%bl
  401f22:	75 e4                	jne    401f08 <read_line+0x48>
  401f24:	48 63 05 15 35 20 00 	movslq 0x203515(%rip),%rax        # 605440 <num_input_strings>
  401f2b:	48 8b 15 1e 35 20 00 	mov    0x20351e(%rip),%rdx        # 605450 <infile>
  401f32:	eb ac                	jmp    401ee0 <read_line+0x20>
  401f34:	0f 1f 40 00          	nopl   0x0(%rax)
  401f38:	48 63 05 01 35 20 00 	movslq 0x203501(%rip),%rax        # 605440 <num_input_strings>
  401f3f:	48 89 c3             	mov    %rax,%rbx
  401f42:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
  401f46:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
  401f4a:	48 8d 2c 85 60 54 60 	lea    0x605460(,%rax,4),%rbp
  401f51:	00 
  401f52:	48 89 ef             	mov    %rbp,%rdi
  401f55:	e8 d6 ed ff ff       	callq  400d30 <strlen@plt>
  401f5a:	83 f8 62             	cmp    $0x62,%eax
  401f5d:	0f 8f 79 01 00 00    	jg     4020dc <read_line+0x21c>
  401f63:	83 e8 01             	sub    $0x1,%eax
  401f66:	83 c3 01             	add    $0x1,%ebx
  401f69:	48 98                	cltq   
  401f6b:	89 1d cf 34 20 00    	mov    %ebx,0x2034cf(%rip)        # 605440 <num_input_strings>
  401f71:	c6 44 05 00 00       	movb   $0x0,0x0(%rbp,%rax,1)
  401f76:	48 83 c4 08          	add    $0x8,%rsp
  401f7a:	48 89 e8             	mov    %rbp,%rax
  401f7d:	5b                   	pop    %rbx
  401f7e:	5d                   	pop    %rbp
  401f7f:	c3                   	retq   
  401f80:	48 8b 15 c9 34 20 00 	mov    0x2034c9(%rip),%rdx        # 605450 <infile>
  401f87:	48 3b 15 a2 33 20 00 	cmp    0x2033a2(%rip),%rdx        # 605330 <stdin@@GLIBC_2.2.5>
  401f8e:	0f 84 d0 00 00 00    	je     402064 <read_line+0x1a4>
  401f94:	bf 42 39 40 00       	mov    $0x403942,%edi
  401f99:	e8 32 ed ff ff       	callq  400cd0 <getenv@plt>
  401f9e:	48 85 c0             	test   %rax,%rax
  401fa1:	0f 85 82 01 00 00    	jne    402129 <read_line+0x269>
  401fa7:	48 8b 15 82 33 20 00 	mov    0x203382(%rip),%rdx        # 605330 <stdin@@GLIBC_2.2.5>
  401fae:	48 89 15 9b 34 20 00 	mov    %rdx,0x20349b(%rip)        # 605450 <infile>
  401fb5:	0f 1f 00             	nopl   (%rax)
  401fb8:	48 63 05 81 34 20 00 	movslq 0x203481(%rip),%rax        # 605440 <num_input_strings>
  401fbf:	be 64 00 00 00       	mov    $0x64,%esi
  401fc4:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
  401fc8:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
  401fcc:	48 8d 3c 85 60 54 60 	lea    0x605460(,%rax,4),%rdi
  401fd3:	00 
  401fd4:	e8 e7 ed ff ff       	callq  400dc0 <fgets@plt>
  401fd9:	48 85 c0             	test   %rax,%rax
  401fdc:	48 89 c5             	mov    %rax,%rbp
  401fdf:	75 1e                	jne    401fff <read_line+0x13f>
  401fe1:	eb 2e                	jmp    402011 <read_line+0x151>
  401fe3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401fe8:	e8 e3 ee ff ff       	callq  400ed0 <__ctype_b_loc@plt>
  401fed:	48 8b 00             	mov    (%rax),%rax
  401ff0:	48 83 c5 01          	add    $0x1,%rbp
  401ff4:	f6 44 58 01 20       	testb  $0x20,0x1(%rax,%rbx,2)
  401ff9:	0f 84 39 ff ff ff    	je     401f38 <read_line+0x78>
  401fff:	48 0f be 5d 00       	movsbq 0x0(%rbp),%rbx
  402004:	84 db                	test   %bl,%bl
  402006:	75 e0                	jne    401fe8 <read_line+0x128>
  402008:	48 8b 15 41 34 20 00 	mov    0x203441(%rip),%rdx        # 605450 <infile>
  40200f:	eb a7                	jmp    401fb8 <read_line+0xf8>
  402011:	48 63 05 28 34 20 00 	movslq 0x203428(%rip),%rax        # 605440 <num_input_strings>
  402018:	83 f8 05             	cmp    $0x5,%eax
  40201b:	0f 8e 0f 01 00 00    	jle    402130 <read_line+0x270>
  402021:	8b 0d 1d 34 20 00    	mov    0x20341d(%rip),%ecx        # 605444 <count.5628>
  402027:	8d 51 01             	lea    0x1(%rcx),%edx
  40202a:	83 fa 01             	cmp    $0x1,%edx
  40202d:	89 15 11 34 20 00    	mov    %edx,0x203411(%rip)        # 605444 <count.5628>
  402033:	74 63                	je     402098 <read_line+0x1d8>
  402035:	83 fa 02             	cmp    $0x2,%edx
  402038:	74 7b                	je     4020b5 <read_line+0x1f5>
  40203a:	0f 8e 8d fe ff ff    	jle    401ecd <read_line+0xd>
  402040:	bf d0 3c 40 00       	mov    $0x403cd0,%edi
  402045:	e8 c6 ec ff ff       	callq  400d10 <puts@plt>
  40204a:	e8 e1 fc ff ff       	callq  401d30 <explode_bomb>
  40204f:	90                   	nop
  402050:	c7 05 e6 33 20 00 06 	movl   $0x6,0x2033e6(%rip)        # 605440 <num_input_strings>
  402057:	00 00 00 
  40205a:	b8 06 00 00 00       	mov    $0x6,%eax
  40205f:	e9 7c fe ff ff       	jmpq   401ee0 <read_line+0x20>
  402064:	48 63 05 d5 33 20 00 	movslq 0x2033d5(%rip),%rax        # 605440 <num_input_strings>
  40206b:	83 f8 05             	cmp    $0x5,%eax
  40206e:	0f 8e bc 00 00 00    	jle    402130 <read_line+0x270>
  402074:	8b 0d ca 33 20 00    	mov    0x2033ca(%rip),%ecx        # 605444 <count.5628>
  40207a:	83 c1 01             	add    $0x1,%ecx
  40207d:	83 f9 01             	cmp    $0x1,%ecx
  402080:	89 0d be 33 20 00    	mov    %ecx,0x2033be(%rip)        # 605444 <count.5628>
  402086:	74 10                	je     402098 <read_line+0x1d8>
  402088:	83 f9 02             	cmp    $0x2,%ecx
  40208b:	74 28                	je     4020b5 <read_line+0x1f5>
  40208d:	0f 8e 41 fe ff ff    	jle    401ed4 <read_line+0x14>
  402093:	eb ab                	jmp    402040 <read_line+0x180>
  402095:	0f 1f 00             	nopl   (%rax)
  402098:	bf 38 3c 40 00       	mov    $0x403c38,%edi
  40209d:	e8 6e ec ff ff       	callq  400d10 <puts@plt>
  4020a2:	48 63 05 97 33 20 00 	movslq 0x203397(%rip),%rax        # 605440 <num_input_strings>
  4020a9:	48 8b 15 a0 33 20 00 	mov    0x2033a0(%rip),%rdx        # 605450 <infile>
  4020b0:	e9 1f fe ff ff       	jmpq   401ed4 <read_line+0x14>
  4020b5:	bf 60 3c 40 00       	mov    $0x403c60,%edi
  4020ba:	e8 51 ec ff ff       	callq  400d10 <puts@plt>
  4020bf:	bf a0 3c 40 00       	mov    $0x403ca0,%edi
  4020c4:	e8 47 ec ff ff       	callq  400d10 <puts@plt>
  4020c9:	48 63 05 70 33 20 00 	movslq 0x203370(%rip),%rax        # 605440 <num_input_strings>
  4020d0:	48 8b 15 79 33 20 00 	mov    0x203379(%rip),%rdx        # 605450 <infile>
  4020d7:	e9 f8 fd ff ff       	jmpq   401ed4 <read_line+0x14>
  4020dc:	bf 4d 39 40 00       	mov    $0x40394d,%edi
  4020e1:	e8 2a ec ff ff       	callq  400d10 <puts@plt>
  4020e6:	48 63 05 53 33 20 00 	movslq 0x203353(%rip),%rax        # 605440 <num_input_strings>
  4020ed:	48 b9 2a 2a 2a 74 72 	movabs $0x636e7572742a2a2a,%rcx
  4020f4:	75 6e 63 
  4020f7:	8d 50 01             	lea    0x1(%rax),%edx
  4020fa:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
  4020fe:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
  402102:	89 15 38 33 20 00    	mov    %edx,0x203338(%rip)        # 605440 <num_input_strings>
  402108:	48 c1 e0 02          	shl    $0x2,%rax
  40210c:	48 89 88 60 54 60 00 	mov    %rcx,0x605460(%rax)
  402113:	48 b9 61 74 65 64 2a 	movabs $0x2a2a2a64657461,%rcx
  40211a:	2a 2a 00 
  40211d:	48 89 88 68 54 60 00 	mov    %rcx,0x605468(%rax)
  402124:	e8 07 fc ff ff       	callq  401d30 <explode_bomb>
  402129:	31 ff                	xor    %edi,%edi
  40212b:	e8 50 ed ff ff       	callq  400e80 <exit@plt>
  402130:	e8 db ed ff ff       	callq  400f10 <sigint_handler.part.2>
  402135:	90                   	nop
  402136:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40213d:	00 00 00 

0000000000402140 <phase_defused>:
  402140:	48 83 ec 08          	sub    $0x8,%rsp
  402144:	8b 3d f6 32 20 00    	mov    0x2032f6(%rip),%edi        # 605440 <num_input_strings>
  40214a:	e8 11 f7 ff ff       	callq  401860 <test_secret_phrase>
  40214f:	85 c0                	test   %eax,%eax
  402151:	74 1d                	je     402170 <phase_defused+0x30>
  402153:	8b 05 e7 32 20 00    	mov    0x2032e7(%rip),%eax        # 605440 <num_input_strings>
  402159:	39 05 71 31 20 00    	cmp    %eax,0x203171(%rip)        # 6052d0 <__dso_handle+0x188>
  40215f:	74 0f                	je     402170 <phase_defused+0x30>
  402161:	e8 ca fb ff ff       	callq  401d30 <explode_bomb>
  402166:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40216d:	00 00 00 
  402170:	8b 3d ca 32 20 00    	mov    0x2032ca(%rip),%edi        # 605440 <num_input_strings>
  402176:	e8 e5 f6 ff ff       	callq  401860 <test_secret_phrase>
  40217b:	83 f8 ff             	cmp    $0xffffffff,%eax
  40217e:	75 18                	jne    402198 <phase_defused+0x58>
  402180:	8b 05 ba 32 20 00    	mov    0x2032ba(%rip),%eax        # 605440 <num_input_strings>
  402186:	39 05 44 31 20 00    	cmp    %eax,0x203144(%rip)        # 6052d0 <__dso_handle+0x188>
  40218c:	75 0a                	jne    402198 <phase_defused+0x58>
  40218e:	e8 9d fb ff ff       	callq  401d30 <explode_bomb>
  402193:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  402198:	bf 01 00 00 00       	mov    $0x1,%edi
  40219d:	e8 8e fa ff ff       	callq  401c30 <invalid_phase+0x260>
  4021a2:	83 3d 97 32 20 00 06 	cmpl   $0x6,0x203297(%rip)        # 605440 <num_input_strings>
  4021a9:	75 61                	jne    40220c <phase_defused+0xcc>
  4021ab:	8b 3d 1f 31 20 00    	mov    0x20311f(%rip),%edi        # 6052d0 <__dso_handle+0x188>
  4021b1:	e8 aa f6 ff ff       	callq  401860 <test_secret_phrase>
  4021b6:	83 f8 01             	cmp    $0x1,%eax
  4021b9:	75 3d                	jne    4021f8 <phase_defused+0xb8>
  4021bb:	bf 00 3d 40 00       	mov    $0x403d00,%edi
  4021c0:	e8 4b eb ff ff       	callq  400d10 <puts@plt>
  4021c5:	bf 68 39 40 00       	mov    $0x403968,%edi
  4021ca:	e8 41 eb ff ff       	callq  400d10 <puts@plt>
  4021cf:	e8 c5 f5 ff ff       	callq  401799 <secret_phase>
  4021d4:	bf 30 3d 40 00       	mov    $0x403d30,%edi
  4021d9:	e8 32 eb ff ff       	callq  400d10 <puts@plt>
  4021de:	bf 01 00 00 00       	mov    $0x1,%edi
  4021e3:	e8 48 fa ff ff       	callq  401c30 <invalid_phase+0x260>
  4021e8:	bf 70 3d 40 00       	mov    $0x403d70,%edi
  4021ed:	e8 1e eb ff ff       	callq  400d10 <puts@plt>
  4021f2:	eb 18                	jmp    40220c <phase_defused+0xcc>
  4021f4:	0f 1f 40 00          	nopl   0x0(%rax)
  4021f8:	bf b8 3d 40 00       	mov    $0x403db8,%edi
  4021fd:	e8 0e eb ff ff       	callq  400d10 <puts@plt>
  402202:	bf 70 3d 40 00       	mov    $0x403d70,%edi
  402207:	e8 04 eb ff ff       	callq  400d10 <puts@plt>
  40220c:	48 83 c4 08          	add    $0x8,%rsp
  402210:	c3                   	retq   
  402211:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  402218:	00 00 00 
  40221b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000402220 <sigalrm_handler>:
  402220:	48 83 ec 08          	sub    $0x8,%rsp
  402224:	48 8b 3d 15 31 20 00 	mov    0x203115(%rip),%rdi        # 605340 <stderr@@GLIBC_2.2.5>
  40222b:	31 c9                	xor    %ecx,%ecx
  40222d:	ba e8 3d 40 00       	mov    $0x403de8,%edx
  402232:	be 01 00 00 00       	mov    $0x1,%esi
  402237:	31 c0                	xor    %eax,%eax
  402239:	e8 62 ec ff ff       	callq  400ea0 <__fprintf_chk@plt>
  40223e:	bf 01 00 00 00       	mov    $0x1,%edi
  402243:	e8 38 ec ff ff       	callq  400e80 <exit@plt>
  402248:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40224f:	00 

0000000000402250 <rio_readlineb.constprop.0>:
  402250:	41 56                	push   %r14
  402252:	41 55                	push   %r13
  402254:	49 89 f6             	mov    %rsi,%r14
  402257:	41 54                	push   %r12
  402259:	4c 8d 67 10          	lea    0x10(%rdi),%r12
  40225d:	55                   	push   %rbp
  40225e:	41 bd 01 00 00 00    	mov    $0x1,%r13d
  402264:	53                   	push   %rbx
  402265:	48 89 fb             	mov    %rdi,%rbx
  402268:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40226f:	00 
  402270:	8b 6b 04             	mov    0x4(%rbx),%ebp
  402273:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  402278:	85 ed                	test   %ebp,%ebp
  40227a:	7f 22                	jg     40229e <rio_readlineb.constprop.0+0x4e>
  40227c:	8b 3b                	mov    (%rbx),%edi
  40227e:	ba 00 20 00 00       	mov    $0x2000,%edx
  402283:	4c 89 e6             	mov    %r12,%rsi
  402286:	e8 f5 ea ff ff       	callq  400d80 <read@plt>
  40228b:	85 c0                	test   %eax,%eax
  40228d:	89 c5                	mov    %eax,%ebp
  40228f:	89 43 04             	mov    %eax,0x4(%rbx)
  402292:	78 4c                	js     4022e0 <rio_readlineb.constprop.0+0x90>
  402294:	74 6a                	je     402300 <rio_readlineb.constprop.0+0xb0>
  402296:	85 ed                	test   %ebp,%ebp
  402298:	4c 89 63 08          	mov    %r12,0x8(%rbx)
  40229c:	7e de                	jle    40227c <rio_readlineb.constprop.0+0x2c>
  40229e:	48 8b 43 08          	mov    0x8(%rbx),%rax
  4022a2:	83 ed 01             	sub    $0x1,%ebp
  4022a5:	49 83 c6 01          	add    $0x1,%r14
  4022a9:	0f b6 10             	movzbl (%rax),%edx
  4022ac:	48 83 c0 01          	add    $0x1,%rax
  4022b0:	89 6b 04             	mov    %ebp,0x4(%rbx)
  4022b3:	48 89 43 08          	mov    %rax,0x8(%rbx)
  4022b7:	80 fa 0a             	cmp    $0xa,%dl
  4022ba:	41 88 56 ff          	mov    %dl,-0x1(%r14)
  4022be:	74 10                	je     4022d0 <rio_readlineb.constprop.0+0x80>
  4022c0:	41 83 c5 01          	add    $0x1,%r13d
  4022c4:	41 81 fd 00 20 00 00 	cmp    $0x2000,%r13d
  4022cb:	75 a3                	jne    402270 <rio_readlineb.constprop.0+0x20>
  4022cd:	0f 1f 00             	nopl   (%rax)
  4022d0:	41 c6 06 00          	movb   $0x0,(%r14)
  4022d4:	49 63 c5             	movslq %r13d,%rax
  4022d7:	5b                   	pop    %rbx
  4022d8:	5d                   	pop    %rbp
  4022d9:	41 5c                	pop    %r12
  4022db:	41 5d                	pop    %r13
  4022dd:	41 5e                	pop    %r14
  4022df:	c3                   	retq   
  4022e0:	e8 0b ea ff ff       	callq  400cf0 <__errno_location@plt>
  4022e5:	83 38 04             	cmpl   $0x4,(%rax)
  4022e8:	74 8e                	je     402278 <rio_readlineb.constprop.0+0x28>
  4022ea:	5b                   	pop    %rbx
  4022eb:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  4022f2:	5d                   	pop    %rbp
  4022f3:	41 5c                	pop    %r12
  4022f5:	41 5d                	pop    %r13
  4022f7:	41 5e                	pop    %r14
  4022f9:	c3                   	retq   
  4022fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402300:	41 83 fd 01          	cmp    $0x1,%r13d
  402304:	75 ca                	jne    4022d0 <rio_readlineb.constprop.0+0x80>
  402306:	31 c0                	xor    %eax,%eax
  402308:	eb cd                	jmp    4022d7 <rio_readlineb.constprop.0+0x87>
  40230a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402310:	55                   	push   %rbp
  402311:	48 89 e5             	mov    %rsp,%rbp
  402314:	41 57                	push   %r15
  402316:	41 56                	push   %r14
  402318:	41 55                	push   %r13
  40231a:	41 54                	push   %r12
  40231c:	49 89 fe             	mov    %rdi,%r14
  40231f:	53                   	push   %rbx
  402320:	41 89 f4             	mov    %esi,%r12d
  402323:	49 89 d7             	mov    %rdx,%r15
  402326:	be 01 00 00 00       	mov    $0x1,%esi
  40232b:	31 d2                	xor    %edx,%edx
  40232d:	bf 02 00 00 00       	mov    $0x2,%edi
  402332:	48 81 ec 78 a0 00 00 	sub    $0xa078,%rsp
  402339:	48 8b 45 18          	mov    0x18(%rbp),%rax
  40233d:	48 89 8d 80 5f ff ff 	mov    %rcx,-0xa080(%rbp)
  402344:	4c 89 85 70 5f ff ff 	mov    %r8,-0xa090(%rbp)
  40234b:	4c 89 8d 78 5f ff ff 	mov    %r9,-0xa088(%rbp)
  402352:	4c 8b 6d 10          	mov    0x10(%rbp),%r13
  402356:	c7 85 9c 5f ff ff 00 	movl   $0x0,-0xa064(%rbp)
  40235d:	00 00 00 
  402360:	48 89 85 88 5f ff ff 	mov    %rax,-0xa078(%rbp)
  402367:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40236e:	00 00 
  402370:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  402374:	31 c0                	xor    %eax,%eax
  402376:	e8 75 eb ff ff       	callq  400ef0 <socket@plt>
  40237b:	85 c0                	test   %eax,%eax
  40237d:	0f 88 8f 06 00 00    	js     402a12 <rio_readlineb.constprop.0+0x7c2>
  402383:	4c 89 f7             	mov    %r14,%rdi
  402386:	89 c3                	mov    %eax,%ebx
  402388:	e8 53 ea ff ff       	callq  400de0 <gethostbyname@plt>
  40238d:	48 85 c0             	test   %rax,%rax
  402390:	0f 84 d6 06 00 00    	je     402a6c <rio_readlineb.constprop.0+0x81c>
  402396:	48 c7 85 a8 5f ff ff 	movq   $0x0,-0xa058(%rbp)
  40239d:	00 00 00 00 
  4023a1:	48 63 50 14          	movslq 0x14(%rax),%rdx
  4023a5:	48 8d 8d a0 5f ff ff 	lea    -0xa060(%rbp),%rcx
  4023ac:	48 8b 40 18          	mov    0x18(%rax),%rax
  4023b0:	48 c7 85 a0 5f ff ff 	movq   $0x0,-0xa060(%rbp)
  4023b7:	00 00 00 00 
  4023bb:	41 b8 02 00 00 00    	mov    $0x2,%r8d
  4023c1:	48 8d 79 04          	lea    0x4(%rcx),%rdi
  4023c5:	b9 0c 00 00 00       	mov    $0xc,%ecx
  4023ca:	66 44 89 85 a0 5f ff 	mov    %r8w,-0xa060(%rbp)
  4023d1:	ff 
  4023d2:	66 41 c1 cc 08       	ror    $0x8,%r12w
  4023d7:	48 8b 30             	mov    (%rax),%rsi
  4023da:	e8 11 ea ff ff       	callq  400df0 <__memmove_chk@plt>
  4023df:	48 8d b5 a0 5f ff ff 	lea    -0xa060(%rbp),%rsi
  4023e6:	ba 10 00 00 00       	mov    $0x10,%edx
  4023eb:	89 df                	mov    %ebx,%edi
  4023ed:	66 44 89 a5 a2 5f ff 	mov    %r12w,-0xa05e(%rbp)
  4023f4:	ff 
  4023f5:	e8 96 ea ff ff       	callq  400e90 <connect@plt>
  4023fa:	85 c0                	test   %eax,%eax
  4023fc:	0f 88 dd 06 00 00    	js     402adf <rio_readlineb.constprop.0+0x88f>
  402402:	4c 89 ef             	mov    %r13,%rdi
  402405:	e8 26 e9 ff ff       	callq  400d30 <strlen@plt>
  40240a:	4c 89 ff             	mov    %r15,%rdi
  40240d:	49 89 c4             	mov    %rax,%r12
  402410:	e8 1b e9 ff ff       	callq  400d30 <strlen@plt>
  402415:	48 8b bd 80 5f ff ff 	mov    -0xa080(%rbp),%rdi
  40241c:	49 89 c7             	mov    %rax,%r15
  40241f:	e8 0c e9 ff ff       	callq  400d30 <strlen@plt>
  402424:	48 8b bd 78 5f ff ff 	mov    -0xa088(%rbp),%rdi
  40242b:	49 89 c6             	mov    %rax,%r14
  40242e:	e8 fd e8 ff ff       	callq  400d30 <strlen@plt>
  402433:	4b 8d 94 37 80 00 00 	lea    0x80(%r15,%r14,1),%rdx
  40243a:	00 
  40243b:	48 01 d0             	add    %rdx,%rax
  40243e:	4b 8d 14 64          	lea    (%r12,%r12,2),%rdx
  402442:	48 01 d0             	add    %rdx,%rax
  402445:	48 3d 00 20 00 00    	cmp    $0x2000,%rax
  40244b:	0f 87 02 04 00 00    	ja     402853 <rio_readlineb.constprop.0+0x603>
  402451:	4c 8d 95 c0 9f ff ff 	lea    -0x6040(%rbp),%r10
  402458:	31 c0                	xor    %eax,%eax
  40245a:	b9 00 04 00 00       	mov    $0x400,%ecx
  40245f:	45 85 e4             	test   %r12d,%r12d
  402462:	4c 89 d7             	mov    %r10,%rdi
  402465:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  402468:	0f 84 c2 00 00 00    	je     402530 <rio_readlineb.constprop.0+0x2e0>
  40246e:	41 8d 44 24 ff       	lea    -0x1(%r12),%eax
  402473:	49 be d9 ff 00 00 00 	movabs $0x2000000000ffd9,%r14
  40247a:	00 20 00 
  40247d:	4d 89 d4             	mov    %r10,%r12
  402480:	4d 8d 7c 05 01       	lea    0x1(%r13,%rax,1),%r15
  402485:	0f 1f 00             	nopl   (%rax)
  402488:	45 0f b6 45 00       	movzbl 0x0(%r13),%r8d
  40248d:	41 8d 40 d6          	lea    -0x2a(%r8),%eax
  402491:	3c 35                	cmp    $0x35,%al
  402493:	0f 86 97 02 00 00    	jbe    402730 <rio_readlineb.constprop.0+0x4e0>
  402499:	44 89 c0             	mov    %r8d,%eax
  40249c:	83 e0 df             	and    $0xffffffdf,%eax
  40249f:	83 e8 41             	sub    $0x41,%eax
  4024a2:	3c 19                	cmp    $0x19,%al
  4024a4:	0f 86 90 02 00 00    	jbe    40273a <rio_readlineb.constprop.0+0x4ea>
  4024aa:	41 80 f8 20          	cmp    $0x20,%r8b
  4024ae:	0f 84 85 03 00 00    	je     402839 <rio_readlineb.constprop.0+0x5e9>
  4024b4:	41 8d 40 e0          	lea    -0x20(%r8),%eax
  4024b8:	3c 5f                	cmp    $0x5f,%al
  4024ba:	76 0a                	jbe    4024c6 <rio_readlineb.constprop.0+0x276>
  4024bc:	41 80 f8 09          	cmp    $0x9,%r8b
  4024c0:	0f 85 3d 04 00 00    	jne    402903 <rio_readlineb.constprop.0+0x6b3>
  4024c6:	48 8d bd c0 df ff ff 	lea    -0x2040(%rbp),%rdi
  4024cd:	31 c0                	xor    %eax,%eax
  4024cf:	b9 c0 3e 40 00       	mov    $0x403ec0,%ecx
  4024d4:	ba 08 00 00 00       	mov    $0x8,%edx
  4024d9:	be 01 00 00 00       	mov    $0x1,%esi
  4024de:	4c 89 95 68 5f ff ff 	mov    %r10,-0xa098(%rbp)
  4024e5:	e8 f6 e9 ff ff       	callq  400ee0 <__sprintf_chk@plt>
  4024ea:	0f b6 85 c0 df ff ff 	movzbl -0x2040(%rbp),%eax
  4024f1:	49 83 c5 01          	add    $0x1,%r13
  4024f5:	49 83 c4 03          	add    $0x3,%r12
  4024f9:	4c 8b 95 68 5f ff ff 	mov    -0xa098(%rbp),%r10
  402500:	41 88 44 24 fd       	mov    %al,-0x3(%r12)
  402505:	0f b6 85 c1 df ff ff 	movzbl -0x203f(%rbp),%eax
  40250c:	41 88 44 24 fe       	mov    %al,-0x2(%r12)
  402511:	0f b6 85 c2 df ff ff 	movzbl -0x203e(%rbp),%eax
  402518:	41 88 44 24 ff       	mov    %al,-0x1(%r12)
  40251d:	4d 39 ef             	cmp    %r13,%r15
  402520:	0f 85 62 ff ff ff    	jne    402488 <rio_readlineb.constprop.0+0x238>
  402526:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40252d:	00 00 00 
  402530:	4c 8d a5 c0 7f ff ff 	lea    -0x8040(%rbp),%r12
  402537:	4c 8b 8d 70 5f ff ff 	mov    -0xa090(%rbp),%r9
  40253e:	4c 8b 85 80 5f ff ff 	mov    -0xa080(%rbp),%r8
  402545:	41 52                	push   %r10
  402547:	ff b5 78 5f ff ff    	pushq  -0xa088(%rbp)
  40254d:	b9 40 3e 40 00       	mov    $0x403e40,%ecx
  402552:	4c 89 e7             	mov    %r12,%rdi
  402555:	ba 00 20 00 00       	mov    $0x2000,%edx
  40255a:	be 01 00 00 00       	mov    $0x1,%esi
  40255f:	31 c0                	xor    %eax,%eax
  402561:	4d 89 e7             	mov    %r12,%r15
  402564:	e8 77 e9 ff ff       	callq  400ee0 <__sprintf_chk@plt>
  402569:	48 8b 85 88 5f ff ff 	mov    -0xa078(%rbp),%rax
  402570:	48 89 c7             	mov    %rax,%rdi
  402573:	41 8b 17             	mov    (%r15),%edx
  402576:	49 83 c7 04          	add    $0x4,%r15
  40257a:	8d 82 ff fe fe fe    	lea    -0x1010101(%rdx),%eax
  402580:	f7 d2                	not    %edx
  402582:	21 d0                	and    %edx,%eax
  402584:	25 80 80 80 80       	and    $0x80808080,%eax
  402589:	74 e8                	je     402573 <rio_readlineb.constprop.0+0x323>
  40258b:	89 c2                	mov    %eax,%edx
  40258d:	48 89 bd 88 5f ff ff 	mov    %rdi,-0xa078(%rbp)
  402594:	c1 ea 10             	shr    $0x10,%edx
  402597:	a9 80 80 00 00       	test   $0x8080,%eax
  40259c:	0f 44 c2             	cmove  %edx,%eax
  40259f:	49 8d 57 02          	lea    0x2(%r15),%rdx
  4025a3:	89 c6                	mov    %eax,%esi
  4025a5:	4c 0f 44 fa          	cmove  %rdx,%r15
  4025a9:	40 00 c6             	add    %al,%sil
  4025ac:	49 83 df 03          	sbb    $0x3,%r15
  4025b0:	4d 29 e7             	sub    %r12,%r15
  4025b3:	58                   	pop    %rax
  4025b4:	5a                   	pop    %rdx
  4025b5:	74 37                	je     4025ee <rio_readlineb.constprop.0+0x39e>
  4025b7:	4d 89 fd             	mov    %r15,%r13
  4025ba:	4d 89 e6             	mov    %r12,%r14
  4025bd:	0f 1f 00             	nopl   (%rax)
  4025c0:	4c 89 ea             	mov    %r13,%rdx
  4025c3:	4c 89 f6             	mov    %r14,%rsi
  4025c6:	89 df                	mov    %ebx,%edi
  4025c8:	e8 53 e7 ff ff       	callq  400d20 <write@plt>
  4025cd:	48 85 c0             	test   %rax,%rax
  4025d0:	0f 8e 82 01 00 00    	jle    402758 <rio_readlineb.constprop.0+0x508>
  4025d6:	49 01 c6             	add    %rax,%r14
  4025d9:	49 29 c5             	sub    %rax,%r13
  4025dc:	75 e2                	jne    4025c0 <rio_readlineb.constprop.0+0x370>
  4025de:	4d 85 ff             	test   %r15,%r15
  4025e1:	48 8b 85 88 5f ff ff 	mov    -0xa078(%rbp),%rax
  4025e8:	0f 88 7f 01 00 00    	js     40276d <rio_readlineb.constprop.0+0x51d>
  4025ee:	48 8d 85 b0 5f ff ff 	lea    -0xa050(%rbp),%rax
  4025f5:	48 8d bd b0 5f ff ff 	lea    -0xa050(%rbp),%rdi
  4025fc:	4c 89 e6             	mov    %r12,%rsi
  4025ff:	89 9d b0 5f ff ff    	mov    %ebx,-0xa050(%rbp)
  402605:	c7 85 b4 5f ff ff 00 	movl   $0x0,-0xa04c(%rbp)
  40260c:	00 00 00 
  40260f:	48 83 c0 10          	add    $0x10,%rax
  402613:	48 89 85 b8 5f ff ff 	mov    %rax,-0xa048(%rbp)
  40261a:	e8 31 fc ff ff       	callq  402250 <rio_readlineb.constprop.0>
  40261f:	48 85 c0             	test   %rax,%rax
  402622:	0f 8e 6f 03 00 00    	jle    402997 <rio_readlineb.constprop.0+0x747>
  402628:	4c 8d 85 c0 df ff ff 	lea    -0x2040(%rbp),%r8
  40262f:	48 8d 8d 9c 5f ff ff 	lea    -0xa064(%rbp),%rcx
  402636:	48 8d 95 c0 bf ff ff 	lea    -0x4040(%rbp),%rdx
  40263d:	31 c0                	xor    %eax,%eax
  40263f:	be c7 3e 40 00       	mov    $0x403ec7,%esi
  402644:	4c 89 e7             	mov    %r12,%rdi
  402647:	e8 e4 e7 ff ff       	callq  400e30 <__isoc99_sscanf@plt>
  40264c:	44 8b 85 9c 5f ff ff 	mov    -0xa064(%rbp),%r8d
  402653:	41 81 f8 c8 00 00 00 	cmp    $0xc8,%r8d
  40265a:	0f 85 6c 02 00 00    	jne    4028cc <rio_readlineb.constprop.0+0x67c>
  402660:	48 8b 85 88 5f ff ff 	mov    -0xa078(%rbp),%rax
  402667:	49 89 c7             	mov    %rax,%r15
  40266a:	eb 1c                	jmp    402688 <rio_readlineb.constprop.0+0x438>
  40266c:	0f 1f 40 00          	nopl   0x0(%rax)
  402670:	48 8d bd b0 5f ff ff 	lea    -0xa050(%rbp),%rdi
  402677:	4c 89 e6             	mov    %r12,%rsi
  40267a:	e8 d1 fb ff ff       	callq  402250 <rio_readlineb.constprop.0>
  40267f:	48 85 c0             	test   %rax,%rax
  402682:	0f 8e 48 01 00 00    	jle    4027d0 <rio_readlineb.constprop.0+0x580>
  402688:	80 bd c0 7f ff ff 0d 	cmpb   $0xd,-0x8040(%rbp)
  40268f:	75 df                	jne    402670 <rio_readlineb.constprop.0+0x420>
  402691:	80 bd c1 7f ff ff 0a 	cmpb   $0xa,-0x803f(%rbp)
  402698:	75 d6                	jne    402670 <rio_readlineb.constprop.0+0x420>
  40269a:	80 bd c2 7f ff ff 00 	cmpb   $0x0,-0x803e(%rbp)
  4026a1:	75 cd                	jne    402670 <rio_readlineb.constprop.0+0x420>
  4026a3:	48 8d bd b0 5f ff ff 	lea    -0xa050(%rbp),%rdi
  4026aa:	4c 89 e6             	mov    %r12,%rsi
  4026ad:	4c 89 bd 88 5f ff ff 	mov    %r15,-0xa078(%rbp)
  4026b4:	e8 97 fb ff ff       	callq  402250 <rio_readlineb.constprop.0>
  4026b9:	48 85 c0             	test   %rax,%rax
  4026bc:	0f 8e 80 04 00 00    	jle    402b42 <rio_readlineb.constprop.0+0x8f2>
  4026c2:	4c 8b bd 88 5f ff ff 	mov    -0xa078(%rbp),%r15
  4026c9:	4c 89 e6             	mov    %r12,%rsi
  4026cc:	4c 89 ff             	mov    %r15,%rdi
  4026cf:	e8 2c e6 ff ff       	callq  400d00 <strcpy@plt>
  4026d4:	89 df                	mov    %ebx,%edi
  4026d6:	e8 95 e6 ff ff       	callq  400d70 <close@plt>
  4026db:	41 0f b6 17          	movzbl (%r15),%edx
  4026df:	b8 4f 00 00 00       	mov    $0x4f,%eax
  4026e4:	29 d0                	sub    %edx,%eax
  4026e6:	75 12                	jne    4026fa <rio_readlineb.constprop.0+0x4aa>
  4026e8:	41 0f b6 57 01       	movzbl 0x1(%r15),%edx
  4026ed:	b8 4b 00 00 00       	mov    $0x4b,%eax
  4026f2:	29 d0                	sub    %edx,%eax
  4026f4:	0f 84 4d 01 00 00    	je     402847 <rio_readlineb.constprop.0+0x5f7>
  4026fa:	85 c0                	test   %eax,%eax
  4026fc:	0f 95 c0             	setne  %al
  4026ff:	0f b6 c0             	movzbl %al,%eax
  402702:	f7 d8                	neg    %eax
  402704:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  402708:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  40270f:	00 00 
  402711:	0f 85 a4 04 00 00    	jne    402bbb <rio_readlineb.constprop.0+0x96b>
  402717:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
  40271b:	5b                   	pop    %rbx
  40271c:	41 5c                	pop    %r12
  40271e:	41 5d                	pop    %r13
  402720:	41 5e                	pop    %r14
  402722:	41 5f                	pop    %r15
  402724:	5d                   	pop    %rbp
  402725:	c3                   	retq   
  402726:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40272d:	00 00 00 
  402730:	49 0f a3 c6          	bt     %rax,%r14
  402734:	0f 83 5f fd ff ff    	jae    402499 <rio_readlineb.constprop.0+0x249>
  40273a:	45 88 04 24          	mov    %r8b,(%r12)
  40273e:	49 83 c4 01          	add    $0x1,%r12
  402742:	49 83 c5 01          	add    $0x1,%r13
  402746:	4d 39 ef             	cmp    %r13,%r15
  402749:	0f 85 39 fd ff ff    	jne    402488 <rio_readlineb.constprop.0+0x238>
  40274f:	e9 dc fd ff ff       	jmpq   402530 <rio_readlineb.constprop.0+0x2e0>
  402754:	0f 1f 40 00          	nopl   0x0(%rax)
  402758:	e8 93 e5 ff ff       	callq  400cf0 <__errno_location@plt>
  40275d:	83 38 04             	cmpl   $0x4,(%rax)
  402760:	0f 84 5a fe ff ff    	je     4025c0 <rio_readlineb.constprop.0+0x370>
  402766:	48 8b 85 88 5f ff ff 	mov    -0xa078(%rbp),%rax
  40276d:	48 b9 45 72 72 6f 72 	movabs $0x43203a726f727245,%rcx
  402774:	3a 20 43 
  402777:	c7 40 28 76 65 72 00 	movl   $0x726576,0x28(%rax)
  40277e:	89 df                	mov    %ebx,%edi
  402780:	48 89 08             	mov    %rcx,(%rax)
  402783:	48 b9 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rcx
  40278a:	20 75 6e 
  40278d:	48 89 48 08          	mov    %rcx,0x8(%rax)
  402791:	48 b9 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rcx
  402798:	74 6f 20 
  40279b:	48 89 48 10          	mov    %rcx,0x10(%rax)
  40279f:	48 b9 77 72 69 74 65 	movabs $0x6f74206574697277,%rcx
  4027a6:	20 74 6f 
  4027a9:	48 89 48 18          	mov    %rcx,0x18(%rax)
  4027ad:	48 b9 20 74 68 65 20 	movabs $0x7265732065687420,%rcx
  4027b4:	73 65 72 
  4027b7:	48 89 48 20          	mov    %rcx,0x20(%rax)
  4027bb:	e8 b0 e5 ff ff       	callq  400d70 <close@plt>
  4027c0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4027c5:	e9 3a ff ff ff       	jmpq   402704 <rio_readlineb.constprop.0+0x4b4>
  4027ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4027d0:	48 b9 45 72 72 6f 72 	movabs $0x43203a726f727245,%rcx
  4027d7:	3a 20 43 
  4027da:	41 c6 47 30 00       	movb   $0x0,0x30(%r15)
  4027df:	89 df                	mov    %ebx,%edi
  4027e1:	49 89 0f             	mov    %rcx,(%r15)
  4027e4:	48 b9 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rcx
  4027eb:	20 75 6e 
  4027ee:	49 89 4f 08          	mov    %rcx,0x8(%r15)
  4027f2:	48 b9 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rcx
  4027f9:	74 6f 20 
  4027fc:	49 89 4f 10          	mov    %rcx,0x10(%r15)
  402800:	48 b9 72 65 61 64 20 	movabs $0x6165682064616572,%rcx
  402807:	68 65 61 
  40280a:	49 89 4f 18          	mov    %rcx,0x18(%r15)
  40280e:	48 b9 64 65 72 73 20 	movabs $0x6f72662073726564,%rcx
  402815:	66 72 6f 
  402818:	49 89 4f 20          	mov    %rcx,0x20(%r15)
  40281c:	48 b9 6d 20 73 65 72 	movabs $0x726576726573206d,%rcx
  402823:	76 65 72 
  402826:	49 89 4f 28          	mov    %rcx,0x28(%r15)
  40282a:	e8 41 e5 ff ff       	callq  400d70 <close@plt>
  40282f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  402834:	e9 cb fe ff ff       	jmpq   402704 <rio_readlineb.constprop.0+0x4b4>
  402839:	41 c6 04 24 2b       	movb   $0x2b,(%r12)
  40283e:	49 83 c4 01          	add    $0x1,%r12
  402842:	e9 fb fe ff ff       	jmpq   402742 <rio_readlineb.constprop.0+0x4f2>
  402847:	41 0f b6 47 02       	movzbl 0x2(%r15),%eax
  40284c:	f7 d8                	neg    %eax
  40284e:	e9 a7 fe ff ff       	jmpq   4026fa <rio_readlineb.constprop.0+0x4aa>
  402853:	48 8b 85 88 5f ff ff 	mov    -0xa078(%rbp),%rax
  40285a:	48 b9 45 72 72 6f 72 	movabs $0x52203a726f727245,%rcx
  402861:	3a 20 52 
  402864:	89 df                	mov    %ebx,%edi
  402866:	48 89 08             	mov    %rcx,(%rax)
  402869:	48 b9 65 73 75 6c 74 	movabs $0x747320746c757365,%rcx
  402870:	20 73 74 
  402873:	48 89 48 08          	mov    %rcx,0x8(%rax)
  402877:	48 b9 72 69 6e 67 20 	movabs $0x6f6f7420676e6972,%rcx
  40287e:	74 6f 6f 
  402881:	48 89 48 10          	mov    %rcx,0x10(%rax)
  402885:	48 b9 20 6c 61 72 67 	movabs $0x202e656772616c20,%rcx
  40288c:	65 2e 20 
  40288f:	48 89 48 18          	mov    %rcx,0x18(%rax)
  402893:	48 b9 49 6e 63 72 65 	movabs $0x6573616572636e49,%rcx
  40289a:	61 73 65 
  40289d:	48 89 48 20          	mov    %rcx,0x20(%rax)
  4028a1:	48 b9 20 53 55 42 4d 	movabs $0x5254494d42555320,%rcx
  4028a8:	49 54 52 
  4028ab:	48 89 48 28          	mov    %rcx,0x28(%rax)
  4028af:	48 b9 5f 4d 41 58 42 	movabs $0x46554258414d5f,%rcx
  4028b6:	55 46 00 
  4028b9:	48 89 48 30          	mov    %rcx,0x30(%rax)
  4028bd:	e8 ae e4 ff ff       	callq  400d70 <close@plt>
  4028c2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4028c7:	e9 38 fe ff ff       	jmpq   402704 <rio_readlineb.constprop.0+0x4b4>
  4028cc:	48 8b bd 88 5f ff ff 	mov    -0xa078(%rbp),%rdi
  4028d3:	4c 8d 8d c0 df ff ff 	lea    -0x2040(%rbp),%r9
  4028da:	b9 10 3e 40 00       	mov    $0x403e10,%ecx
  4028df:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
  4028e6:	be 01 00 00 00       	mov    $0x1,%esi
  4028eb:	31 c0                	xor    %eax,%eax
  4028ed:	e8 ee e5 ff ff       	callq  400ee0 <__sprintf_chk@plt>
  4028f2:	89 df                	mov    %ebx,%edi
  4028f4:	e8 77 e4 ff ff       	callq  400d70 <close@plt>
  4028f9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4028fe:	e9 01 fe ff ff       	jmpq   402704 <rio_readlineb.constprop.0+0x4b4>
  402903:	48 8b 85 88 5f ff ff 	mov    -0xa078(%rbp),%rax
  40290a:	48 b9 45 72 72 6f 72 	movabs $0x52203a726f727245,%rcx
  402911:	3a 20 52 
  402914:	89 df                	mov    %ebx,%edi
  402916:	48 89 08             	mov    %rcx,(%rax)
  402919:	48 b9 65 73 75 6c 74 	movabs $0x747320746c757365,%rcx
  402920:	20 73 74 
  402923:	c6 40 42 00          	movb   $0x0,0x42(%rax)
  402927:	48 89 48 08          	mov    %rcx,0x8(%rax)
  40292b:	48 b9 72 69 6e 67 20 	movabs $0x6e6f6320676e6972,%rcx
  402932:	63 6f 6e 
  402935:	48 89 48 10          	mov    %rcx,0x10(%rax)
  402939:	48 b9 74 61 69 6e 73 	movabs $0x6e6120736e696174,%rcx
  402940:	20 61 6e 
  402943:	48 89 48 18          	mov    %rcx,0x18(%rax)
  402947:	48 b9 20 69 6c 6c 65 	movabs $0x6c6167656c6c6920,%rcx
  40294e:	67 61 6c 
  402951:	48 89 48 20          	mov    %rcx,0x20(%rax)
  402955:	48 b9 20 6f 72 20 75 	movabs $0x72706e7520726f20,%rcx
  40295c:	6e 70 72 
  40295f:	48 89 48 28          	mov    %rcx,0x28(%rax)
  402963:	48 b9 69 6e 74 61 62 	movabs $0x20656c6261746e69,%rcx
  40296a:	6c 65 20 
  40296d:	48 89 48 30          	mov    %rcx,0x30(%rax)
  402971:	48 b9 63 68 61 72 61 	movabs $0x6574636172616863,%rcx
  402978:	63 74 65 
  40297b:	48 89 48 38          	mov    %rcx,0x38(%rax)
  40297f:	b9 72 2e 00 00       	mov    $0x2e72,%ecx
  402984:	66 89 48 40          	mov    %cx,0x40(%rax)
  402988:	e8 e3 e3 ff ff       	callq  400d70 <close@plt>
  40298d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  402992:	e9 6d fd ff ff       	jmpq   402704 <rio_readlineb.constprop.0+0x4b4>
  402997:	48 8b 85 88 5f ff ff 	mov    -0xa078(%rbp),%rax
  40299e:	48 b9 45 72 72 6f 72 	movabs $0x43203a726f727245,%rcx
  4029a5:	3a 20 43 
  4029a8:	be 72 00 00 00       	mov    $0x72,%esi
  4029ad:	89 df                	mov    %ebx,%edi
  4029af:	48 89 08             	mov    %rcx,(%rax)
  4029b2:	48 b9 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rcx
  4029b9:	20 75 6e 
  4029bc:	c7 40 30 65 72 76 65 	movl   $0x65767265,0x30(%rax)
  4029c3:	48 89 48 08          	mov    %rcx,0x8(%rax)
  4029c7:	48 b9 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rcx
  4029ce:	74 6f 20 
  4029d1:	66 89 70 34          	mov    %si,0x34(%rax)
  4029d5:	48 89 48 10          	mov    %rcx,0x10(%rax)
  4029d9:	48 b9 72 65 61 64 20 	movabs $0x7269662064616572,%rcx
  4029e0:	66 69 72 
  4029e3:	48 89 48 18          	mov    %rcx,0x18(%rax)
  4029e7:	48 b9 73 74 20 68 65 	movabs $0x6564616568207473,%rcx
  4029ee:	61 64 65 
  4029f1:	48 89 48 20          	mov    %rcx,0x20(%rax)
  4029f5:	48 b9 72 20 66 72 6f 	movabs $0x73206d6f72662072,%rcx
  4029fc:	6d 20 73 
  4029ff:	48 89 48 28          	mov    %rcx,0x28(%rax)
  402a03:	e8 68 e3 ff ff       	callq  400d70 <close@plt>
  402a08:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  402a0d:	e9 f2 fc ff ff       	jmpq   402704 <rio_readlineb.constprop.0+0x4b4>
  402a12:	48 8b 85 88 5f ff ff 	mov    -0xa078(%rbp),%rax
  402a19:	48 b9 45 72 72 6f 72 	movabs $0x43203a726f727245,%rcx
  402a20:	3a 20 43 
  402a23:	41 ba 74 00 00 00    	mov    $0x74,%r10d
  402a29:	48 89 08             	mov    %rcx,(%rax)
  402a2c:	48 b9 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rcx
  402a33:	20 75 6e 
  402a36:	c7 40 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%rax)
  402a3d:	48 89 48 08          	mov    %rcx,0x8(%rax)
  402a41:	48 b9 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rcx
  402a48:	74 6f 20 
  402a4b:	66 44 89 50 24       	mov    %r10w,0x24(%rax)
  402a50:	48 89 48 10          	mov    %rcx,0x10(%rax)
  402a54:	48 b9 63 72 65 61 74 	movabs $0x7320657461657263,%rcx
  402a5b:	65 20 73 
  402a5e:	48 89 48 18          	mov    %rcx,0x18(%rax)
  402a62:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  402a67:	e9 98 fc ff ff       	jmpq   402704 <rio_readlineb.constprop.0+0x4b4>
  402a6c:	48 8b 85 88 5f ff ff 	mov    -0xa078(%rbp),%rax
  402a73:	48 b9 45 72 72 6f 72 	movabs $0x44203a726f727245,%rcx
  402a7a:	3a 20 44 
  402a7d:	41 b9 73 73 00 00    	mov    $0x7373,%r9d
  402a83:	89 df                	mov    %ebx,%edi
  402a85:	48 89 08             	mov    %rcx,(%rax)
  402a88:	48 b9 4e 53 20 69 73 	movabs $0x6e7520736920534e,%rcx
  402a8f:	20 75 6e 
  402a92:	c7 40 28 64 64 72 65 	movl   $0x65726464,0x28(%rax)
  402a99:	48 89 48 08          	mov    %rcx,0x8(%rax)
  402a9d:	48 b9 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rcx
  402aa4:	74 6f 20 
  402aa7:	66 44 89 48 2c       	mov    %r9w,0x2c(%rax)
  402aac:	48 89 48 10          	mov    %rcx,0x10(%rax)
  402ab0:	48 b9 72 65 73 6f 6c 	movabs $0x2065766c6f736572,%rcx
  402ab7:	76 65 20 
  402aba:	c6 40 2e 00          	movb   $0x0,0x2e(%rax)
  402abe:	48 89 48 18          	mov    %rcx,0x18(%rax)
  402ac2:	48 b9 73 65 72 76 65 	movabs $0x6120726576726573,%rcx
  402ac9:	72 20 61 
  402acc:	48 89 48 20          	mov    %rcx,0x20(%rax)
  402ad0:	e8 9b e2 ff ff       	callq  400d70 <close@plt>
  402ad5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  402ada:	e9 25 fc ff ff       	jmpq   402704 <rio_readlineb.constprop.0+0x4b4>
  402adf:	48 8b 85 88 5f ff ff 	mov    -0xa078(%rbp),%rax
  402ae6:	48 b9 45 72 72 6f 72 	movabs $0x55203a726f727245,%rcx
  402aed:	3a 20 55 
  402af0:	bf 65 72 00 00       	mov    $0x7265,%edi
  402af5:	48 89 08             	mov    %rcx,(%rax)
  402af8:	48 b9 6e 61 62 6c 65 	movabs $0x6f7420656c62616e,%rcx
  402aff:	20 74 6f 
  402b02:	66 89 78 24          	mov    %di,0x24(%rax)
  402b06:	48 89 48 08          	mov    %rcx,0x8(%rax)
  402b0a:	48 b9 20 63 6f 6e 6e 	movabs $0x7463656e6e6f6320,%rcx
  402b11:	65 63 74 
  402b14:	c7 40 20 73 65 72 76 	movl   $0x76726573,0x20(%rax)
  402b1b:	48 89 48 10          	mov    %rcx,0x10(%rax)
  402b1f:	48 b9 20 74 6f 20 74 	movabs $0x20656874206f7420,%rcx
  402b26:	68 65 20 
  402b29:	c6 40 26 00          	movb   $0x0,0x26(%rax)
  402b2d:	48 89 48 18          	mov    %rcx,0x18(%rax)
  402b31:	89 df                	mov    %ebx,%edi
  402b33:	e8 38 e2 ff ff       	callq  400d70 <close@plt>
  402b38:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  402b3d:	e9 c2 fb ff ff       	jmpq   402704 <rio_readlineb.constprop.0+0x4b4>
  402b42:	48 8b 85 88 5f ff ff 	mov    -0xa078(%rbp),%rax
  402b49:	48 b9 45 72 72 6f 72 	movabs $0x43203a726f727245,%rcx
  402b50:	3a 20 43 
  402b53:	89 df                	mov    %ebx,%edi
  402b55:	48 89 08             	mov    %rcx,(%rax)
  402b58:	48 b9 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rcx
  402b5f:	20 75 6e 
  402b62:	48 89 48 08          	mov    %rcx,0x8(%rax)
  402b66:	48 b9 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rcx
  402b6d:	74 6f 20 
  402b70:	48 89 48 10          	mov    %rcx,0x10(%rax)
  402b74:	48 b9 72 65 61 64 20 	movabs $0x6174732064616572,%rcx
  402b7b:	73 74 61 
  402b7e:	48 89 48 18          	mov    %rcx,0x18(%rax)
  402b82:	48 b9 74 75 73 20 6d 	movabs $0x7373656d20737574,%rcx
  402b89:	65 73 73 
  402b8c:	48 89 48 20          	mov    %rcx,0x20(%rax)
  402b90:	48 b9 61 67 65 20 66 	movabs $0x6d6f726620656761,%rcx
  402b97:	72 6f 6d 
  402b9a:	48 89 48 28          	mov    %rcx,0x28(%rax)
  402b9e:	48 b9 20 73 65 72 76 	movabs $0x72657672657320,%rcx
  402ba5:	65 72 00 
  402ba8:	48 89 48 30          	mov    %rcx,0x30(%rax)
  402bac:	e8 bf e1 ff ff       	callq  400d70 <close@plt>
  402bb1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  402bb6:	e9 49 fb ff ff       	jmpq   402704 <rio_readlineb.constprop.0+0x4b4>
  402bbb:	e8 80 e1 ff ff       	callq  400d40 <__stack_chk_fail@plt>

0000000000402bc0 <init_timeout>:
  402bc0:	85 ff                	test   %edi,%edi
  402bc2:	74 2c                	je     402bf0 <init_timeout+0x30>
  402bc4:	53                   	push   %rbx
  402bc5:	be 20 22 40 00       	mov    $0x402220,%esi
  402bca:	89 fb                	mov    %edi,%ebx
  402bcc:	bf 0e 00 00 00       	mov    $0xe,%edi
  402bd1:	e8 fa e1 ff ff       	callq  400dd0 <signal@plt>
  402bd6:	85 db                	test   %ebx,%ebx
  402bd8:	bf 00 00 00 00       	mov    $0x0,%edi
  402bdd:	0f 49 fb             	cmovns %ebx,%edi
  402be0:	5b                   	pop    %rbx
  402be1:	e9 7a e1 ff ff       	jmpq   400d60 <alarm@plt>
  402be6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  402bed:	00 00 00 
  402bf0:	f3 c3                	repz retq 
  402bf2:	0f 1f 40 00          	nopl   0x0(%rax)
  402bf6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  402bfd:	00 00 00 

0000000000402c00 <init_driver>:
  402c00:	55                   	push   %rbp
  402c01:	53                   	push   %rbx
  402c02:	be 01 00 00 00       	mov    $0x1,%esi
  402c07:	48 89 fd             	mov    %rdi,%rbp
  402c0a:	bf 0d 00 00 00       	mov    $0xd,%edi
  402c0f:	48 83 ec 28          	sub    $0x28,%rsp
  402c13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  402c1a:	00 00 
  402c1c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  402c21:	31 c0                	xor    %eax,%eax
  402c23:	e8 a8 e1 ff ff       	callq  400dd0 <signal@plt>
  402c28:	be 01 00 00 00       	mov    $0x1,%esi
  402c2d:	bf 1d 00 00 00       	mov    $0x1d,%edi
  402c32:	e8 99 e1 ff ff       	callq  400dd0 <signal@plt>
  402c37:	be 01 00 00 00       	mov    $0x1,%esi
  402c3c:	bf 1d 00 00 00       	mov    $0x1d,%edi
  402c41:	e8 8a e1 ff ff       	callq  400dd0 <signal@plt>
  402c46:	31 d2                	xor    %edx,%edx
  402c48:	be 01 00 00 00       	mov    $0x1,%esi
  402c4d:	bf 02 00 00 00       	mov    $0x2,%edi
  402c52:	e8 99 e2 ff ff       	callq  400ef0 <socket@plt>
  402c57:	85 c0                	test   %eax,%eax
  402c59:	0f 88 a1 00 00 00    	js     402d00 <init_driver+0x100>
  402c5f:	bf d8 3e 40 00       	mov    $0x403ed8,%edi
  402c64:	89 c3                	mov    %eax,%ebx
  402c66:	e8 75 e1 ff ff       	callq  400de0 <gethostbyname@plt>
  402c6b:	48 85 c0             	test   %rax,%rax
  402c6e:	0f 84 0e 01 00 00    	je     402d82 <init_driver+0x182>
  402c74:	ba 02 00 00 00       	mov    $0x2,%edx
  402c79:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
  402c80:	00 
  402c81:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
  402c88:	00 00 
  402c8a:	66 89 14 24          	mov    %dx,(%rsp)
  402c8e:	48 63 50 14          	movslq 0x14(%rax),%rdx
  402c92:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
  402c97:	48 8b 40 18          	mov    0x18(%rax),%rax
  402c9b:	b9 0c 00 00 00       	mov    $0xc,%ecx
  402ca0:	48 8b 30             	mov    (%rax),%rsi
  402ca3:	e8 48 e1 ff ff       	callq  400df0 <__memmove_chk@plt>
  402ca8:	b9 3b 6d 00 00       	mov    $0x6d3b,%ecx
  402cad:	ba 10 00 00 00       	mov    $0x10,%edx
  402cb2:	48 89 e6             	mov    %rsp,%rsi
  402cb5:	89 df                	mov    %ebx,%edi
  402cb7:	66 89 4c 24 02       	mov    %cx,0x2(%rsp)
  402cbc:	e8 cf e1 ff ff       	callq  400e90 <connect@plt>
  402cc1:	85 c0                	test   %eax,%eax
  402cc3:	0f 88 87 00 00 00    	js     402d50 <init_driver+0x150>
  402cc9:	89 df                	mov    %ebx,%edi
  402ccb:	e8 a0 e0 ff ff       	callq  400d70 <close@plt>
  402cd0:	b8 4f 4b 00 00       	mov    $0x4b4f,%eax
  402cd5:	c6 45 02 00          	movb   $0x0,0x2(%rbp)
  402cd9:	66 89 45 00          	mov    %ax,0x0(%rbp)
  402cdd:	31 c0                	xor    %eax,%eax
  402cdf:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  402ce4:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  402ceb:	00 00 
  402ced:	0f 85 fa 00 00 00    	jne    402ded <init_driver+0x1ed>
  402cf3:	48 83 c4 28          	add    $0x28,%rsp
  402cf7:	5b                   	pop    %rbx
  402cf8:	5d                   	pop    %rbp
  402cf9:	c3                   	retq   
  402cfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402d00:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  402d07:	3a 20 43 
  402d0a:	bf 74 00 00 00       	mov    $0x74,%edi
  402d0f:	c7 45 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%rbp)
  402d16:	48 89 45 00          	mov    %rax,0x0(%rbp)
  402d1a:	48 b8 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rax
  402d21:	20 75 6e 
  402d24:	66 89 7d 24          	mov    %di,0x24(%rbp)
  402d28:	48 89 45 08          	mov    %rax,0x8(%rbp)
  402d2c:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  402d33:	74 6f 20 
  402d36:	48 89 45 10          	mov    %rax,0x10(%rbp)
  402d3a:	48 b8 63 72 65 61 74 	movabs $0x7320657461657263,%rax
  402d41:	65 20 73 
  402d44:	48 89 45 18          	mov    %rax,0x18(%rbp)
  402d48:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  402d4d:	eb 90                	jmp    402cdf <init_driver+0xdf>
  402d4f:	90                   	nop
  402d50:	41 b8 d8 3e 40 00    	mov    $0x403ed8,%r8d
  402d56:	b9 98 3e 40 00       	mov    $0x403e98,%ecx
  402d5b:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
  402d62:	be 01 00 00 00       	mov    $0x1,%esi
  402d67:	48 89 ef             	mov    %rbp,%rdi
  402d6a:	31 c0                	xor    %eax,%eax
  402d6c:	e8 6f e1 ff ff       	callq  400ee0 <__sprintf_chk@plt>
  402d71:	89 df                	mov    %ebx,%edi
  402d73:	e8 f8 df ff ff       	callq  400d70 <close@plt>
  402d78:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  402d7d:	e9 5d ff ff ff       	jmpq   402cdf <init_driver+0xdf>
  402d82:	48 b8 45 72 72 6f 72 	movabs $0x44203a726f727245,%rax
  402d89:	3a 20 44 
  402d8c:	be 73 73 00 00       	mov    $0x7373,%esi
  402d91:	c7 45 28 64 64 72 65 	movl   $0x65726464,0x28(%rbp)
  402d98:	48 89 45 00          	mov    %rax,0x0(%rbp)
  402d9c:	48 b8 4e 53 20 69 73 	movabs $0x6e7520736920534e,%rax
  402da3:	20 75 6e 
  402da6:	66 89 75 2c          	mov    %si,0x2c(%rbp)
  402daa:	48 89 45 08          	mov    %rax,0x8(%rbp)
  402dae:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  402db5:	74 6f 20 
  402db8:	c6 45 2e 00          	movb   $0x0,0x2e(%rbp)
  402dbc:	48 89 45 10          	mov    %rax,0x10(%rbp)
  402dc0:	48 b8 72 65 73 6f 6c 	movabs $0x2065766c6f736572,%rax
  402dc7:	76 65 20 
  402dca:	89 df                	mov    %ebx,%edi
  402dcc:	48 89 45 18          	mov    %rax,0x18(%rbp)
  402dd0:	48 b8 73 65 72 76 65 	movabs $0x6120726576726573,%rax
  402dd7:	72 20 61 
  402dda:	48 89 45 20          	mov    %rax,0x20(%rbp)
  402dde:	e8 8d df ff ff       	callq  400d70 <close@plt>
  402de3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  402de8:	e9 f2 fe ff ff       	jmpq   402cdf <init_driver+0xdf>
  402ded:	e8 4e df ff ff       	callq  400d40 <__stack_chk_fail@plt>
  402df2:	0f 1f 40 00          	nopl   0x0(%rax)
  402df6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  402dfd:	00 00 00 
  402e00:	48 83 ec 18          	sub    $0x18,%rsp
  402e04:	85 c9                	test   %ecx,%ecx
  402e06:	75 28                	jne    402e30 <init_driver+0x230>
  402e08:	48 85 ff             	test   %rdi,%rdi
  402e0b:	74 05                	je     402e12 <init_driver+0x212>
  402e0d:	80 3f 00             	cmpb   $0x0,(%rdi)
  402e10:	75 4e                	jne    402e60 <init_driver+0x260>
  402e12:	b8 4f 4b 00 00       	mov    $0x4b4f,%eax
  402e17:	41 c6 40 02 00       	movb   $0x0,0x2(%r8)
  402e1c:	66 41 89 00          	mov    %ax,(%r8)
  402e20:	31 c0                	xor    %eax,%eax
  402e22:	48 83 c4 18          	add    $0x18,%rsp
  402e26:	c3                   	retq   
  402e27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  402e2e:	00 00 
  402e30:	be ea 3e 40 00       	mov    $0x403eea,%esi
  402e35:	bf 01 00 00 00       	mov    $0x1,%edi
  402e3a:	31 c0                	xor    %eax,%eax
  402e3c:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
  402e41:	e8 0a e0 ff ff       	callq  400e50 <__printf_chk@plt>
  402e46:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
  402e4b:	be 4f 4b 00 00       	mov    $0x4b4f,%esi
  402e50:	31 c0                	xor    %eax,%eax
  402e52:	66 41 89 30          	mov    %si,(%r8)
  402e56:	41 c6 40 02 00       	movb   $0x0,0x2(%r8)
  402e5b:	48 83 c4 18          	add    $0x18,%rsp
  402e5f:	c3                   	retq   
  402e60:	41 50                	push   %r8
  402e62:	52                   	push   %rdx
  402e63:	48 89 f9             	mov    %rdi,%rcx
  402e66:	49 89 f0             	mov    %rsi,%r8
  402e69:	ba 05 3f 40 00       	mov    $0x403f05,%edx
  402e6e:	41 b9 01 3f 40 00    	mov    $0x403f01,%r9d
  402e74:	be 6d 3b 00 00       	mov    $0x3b6d,%esi
  402e79:	bf d8 3e 40 00       	mov    $0x403ed8,%edi
  402e7e:	e8 8d f4 ff ff       	callq  402310 <rio_readlineb.constprop.0+0xc0>
  402e83:	5a                   	pop    %rdx
  402e84:	59                   	pop    %rcx
  402e85:	48 83 c4 18          	add    $0x18,%rsp
  402e89:	c3                   	retq   
  402e8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000402e90 <__libc_csu_init>:
  402e90:	41 57                	push   %r15
  402e92:	41 56                	push   %r14
  402e94:	41 89 ff             	mov    %edi,%r15d
  402e97:	41 55                	push   %r13
  402e99:	41 54                	push   %r12
  402e9b:	4c 8d 25 6e 1f 20 00 	lea    0x201f6e(%rip),%r12        # 604e10 <__frame_dummy_init_array_entry>
  402ea2:	55                   	push   %rbp
  402ea3:	48 8d 2d 6e 1f 20 00 	lea    0x201f6e(%rip),%rbp        # 604e18 <__init_array_end>
  402eaa:	53                   	push   %rbx
  402eab:	49 89 f6             	mov    %rsi,%r14
  402eae:	49 89 d5             	mov    %rdx,%r13
  402eb1:	4c 29 e5             	sub    %r12,%rbp
  402eb4:	48 83 ec 08          	sub    $0x8,%rsp
  402eb8:	48 c1 fd 03          	sar    $0x3,%rbp
  402ebc:	e8 d7 dd ff ff       	callq  400c98 <_init>
  402ec1:	48 85 ed             	test   %rbp,%rbp
  402ec4:	74 20                	je     402ee6 <__libc_csu_init+0x56>
  402ec6:	31 db                	xor    %ebx,%ebx
  402ec8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  402ecf:	00 
  402ed0:	4c 89 ea             	mov    %r13,%rdx
  402ed3:	4c 89 f6             	mov    %r14,%rsi
  402ed6:	44 89 ff             	mov    %r15d,%edi
  402ed9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  402edd:	48 83 c3 01          	add    $0x1,%rbx
  402ee1:	48 39 eb             	cmp    %rbp,%rbx
  402ee4:	75 ea                	jne    402ed0 <__libc_csu_init+0x40>
  402ee6:	48 83 c4 08          	add    $0x8,%rsp
  402eea:	5b                   	pop    %rbx
  402eeb:	5d                   	pop    %rbp
  402eec:	41 5c                	pop    %r12
  402eee:	41 5d                	pop    %r13
  402ef0:	41 5e                	pop    %r14
  402ef2:	41 5f                	pop    %r15
  402ef4:	c3                   	retq   
  402ef5:	90                   	nop
  402ef6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  402efd:	00 00 00 

0000000000402f00 <__libc_csu_fini>:
  402f00:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000402f04 <_fini>:
  402f04:	48 83 ec 08          	sub    $0x8,%rsp
  402f08:	48 83 c4 08          	add    $0x8,%rsp
  402f0c:	c3                   	retq   
